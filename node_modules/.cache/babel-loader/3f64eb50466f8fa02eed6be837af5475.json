{"ast":null,"code":"import _classCallCheck from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Kevin/Desktop/reborn/src/components/Concept.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { bindActionCreators } from 'redux';\nimport { openPanel, selectConcept, selectTab } from '../actions/index.js';\nimport reddit_img from '../img/RedditLogo.png';\nimport medium_img from '../img/MediumLogo.png';\nimport map from 'lodash/map';\nimport Publisher from './Publisher.js';\n\nvar Concept =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Concept, _Component);\n\n  function Concept() {\n    _classCallCheck(this, Concept);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Concept).apply(this, arguments));\n  }\n\n  _createClass(Concept, [{\n    key: \"renderPublishers\",\n    value: function renderPublishers() {\n      var publishers = this.props.publishers;\n      return map(publishers, function (publisher, id) {\n        return React.createElement(Publisher, Object.assign({\n          key: id,\n          id: id\n        }, publisher, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          title = _this$props.title,\n          date = _this$props.date,\n          description = _this$props.description,\n          img_url = _this$props.img_url,\n          id = _this$props.id,\n          medium = _this$props.medium,\n          ready = _this$props.ready;\n      return React.createElement(\"div\", {\n        className: \"concept-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: !ready && medium,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        onClick: function onClick() {\n          if (ready) {\n            _this.props.selectConcept(id);\n\n            _this.props.selectTab(\"concepts\");\n\n            _this.props.openPanel(true, \"concepts\");\n          }\n        },\n        className: \"concept\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"concept-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"hat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, date.toUpperCase()), React.createElement(\"h2\", {\n        className: \"head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, title), React.createElement(\"p\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, description)), React.createElement(\"div\", {\n        className: \"concept-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          backgroundImage: \"url(\" + img_url + \")\"\n        },\n        className: \"thumbnail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Concept;\n}(Component);\n\nfunction matchDispatchToProps(dispatch) {\n  return bindActionCreators({\n    openPanel: openPanel,\n    selectConcept: selectConcept,\n    selectTab: selectTab\n  }, dispatch);\n}\n\nvar selector = createSelector(function (state) {\n  return state['concepts'];\n}, function (concepts) {\n  return {\n    concepts: concepts\n  };\n});\nexport default connect(selector, matchDispatchToProps)(Concept);","map":{"version":3,"sources":["/Users/Kevin/Desktop/reborn/src/components/Concept.js"],"names":["React","Component","connect","createSelector","bindActionCreators","openPanel","selectConcept","selectTab","reddit_img","medium_img","map","Publisher","Concept","publishers","props","publisher","id","title","date","description","img_url","medium","ready","toUpperCase","backgroundImage","matchDispatchToProps","dispatch","selector","state","concepts"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SACEC,SADF,EAEEC,aAFF,EAGEC,SAHF,QAIO,qBAJP;AAKA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;;IAEMC,O;;;;;;;;;;;;;uCACe;AAAA,UACTC,UADS,GACM,KAAKC,KADX,CACTD,UADS;AAGjB,aACEH,GAAG,CACDG,UADC,EAED,UAACE,SAAD,EAAYC,EAAZ;AAAA,eAAmB,oBAAC,SAAD;AAAW,UAAA,GAAG,EAAEA,EAAhB;AAAoB,UAAA,EAAE,EAAEA;AAAxB,WAAgCD,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAnB;AAAA,OAFC,CADL;AAMD;;;6BAEQ;AAAA;;AAAA,wBAC0D,KAAKD,KAD/D;AAAA,UACCG,KADD,eACCA,KADD;AAAA,UACQC,IADR,eACQA,IADR;AAAA,UACcC,WADd,eACcA,WADd;AAAA,UAC2BC,OAD3B,eAC2BA,OAD3B;AAAA,UACoCJ,EADpC,eACoCA,EADpC;AAAA,UACwCK,MADxC,eACwCA,MADxC;AAAA,UACgDC,KADhD,eACgDA,KADhD;AAGP,aACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAE,CAACA,KAAD,IAAUD,MADlB;AAEE,QAAA,MAAM,EAAC,QAFT;AAEkB,QAAA,GAAG,EAAC,qBAFtB;AAGE,QAAA,OAAO,EAAE,mBAAM;AACb,cAAIC,KAAJ,EAAW;AACT,YAAA,KAAI,CAACR,KAAL,CAAWR,aAAX,CAAyBU,EAAzB;;AACA,YAAA,KAAI,CAACF,KAAL,CAAWP,SAAX,CAAqB,UAArB;;AACA,YAAA,KAAI,CAACO,KAAL,CAAWT,SAAX,CAAqB,IAArB,EAA2B,UAA3B;AACD;AACF,SATH;AAUE,QAAA,SAAS,EAAC,SAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAWE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGa,IAAI,CAACK,WAAL,EADH,CADF,EAIE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGN,KADH,CAJF,EAOE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGE,WADH,CAPF,CAXF,EAsBE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,KAAK,EAAE;AAACK,UAAAA,eAAe,EAAE,SAASJ,OAAT,GAAmB;AAArC,SAAZ;AAAuD,QAAA,SAAS,EAAC,WAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAtBF,CADF,CADF;AA6DD;;;;EA5EmBnB,S;;AA+EtB,SAASwB,oBAAT,CAA8BC,QAA9B,EAAwC;AACtC,SAAOtB,kBAAkB,CAAC;AACxBC,IAAAA,SAAS,EAATA,SADwB;AAExBC,IAAAA,aAAa,EAAbA,aAFwB;AAGxBC,IAAAA,SAAS,EAATA;AAHwB,GAAD,EAItBmB,QAJsB,CAAzB;AAKD;;AAED,IAAMC,QAAQ,GAAGxB,cAAc,CAC7B,UAAAyB,KAAK;AAAA,SAAIA,KAAK,CAAC,UAAD,CAAT;AAAA,CADwB,EAE7B,UACEC,QADF,EAEG;AACD,SAAQ;AACNA,IAAAA,QAAQ,EAARA;AADM,GAAR;AAGD,CAR4B,CAA/B;AAWA,eAAe3B,OAAO,CAACyB,QAAD,EAAWF,oBAAX,CAAP,CAAwCb,OAAxC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { bindActionCreators } from 'redux';\nimport {\n  openPanel,\n  selectConcept,\n  selectTab\n} from '../actions/index.js';\nimport reddit_img from '../img/RedditLogo.png';\nimport medium_img from '../img/MediumLogo.png';\nimport map from 'lodash/map';\nimport Publisher from './Publisher.js';\n\nclass Concept extends Component {\n  renderPublishers() {\n    const { publishers } = this.props;\n\n    return(\n      map(\n        publishers,\n        (publisher, id) => <Publisher key={id} id={id} {...publisher} />\n      )\n    );\n  }\n\n  render() {\n    const { title, date, description, img_url, id, medium, ready } = this.props;\n\n    return (\n      <div className=\"concept-box\">\n        <a\n          href={!ready && medium}\n          target=\"_blank\" rel=\"noopener noreferrer\"\n          onClick={() => {\n            if (ready) {\n              this.props.selectConcept(id);\n              this.props.selectTab(\"concepts\");\n              this.props.openPanel(true, \"concepts\");\n            }\n          }}\n          className=\"concept\">\n          <div className=\"concept-left\">\n            <p className=\"hat\">\n              {date.toUpperCase()}\n            </p>\n            <h2 className=\"head\">\n              {title}\n            </h2>\n            <p className=\"description\">\n              {description}\n            </p>\n          </div>\n          <div className=\"concept-right\">\n            <div style={{backgroundImage: \"url(\" + img_url + \")\"}} className=\"thumbnail\" />\n          </div>\n\n          {/* <div className=\"CTA-row\">\n            {ready &&\n              <div\n                onClick={() => {\n                  this.props.selectConcept(id);\n                  this.props.selectTab(\"concepts\");\n                  this.props.openPanel(true, \"concepts\");\n                }}\n                className=\"CTA\">\n                READ STORY\n              </div>\n            }\n            <a href={medium} target=\"_blank\" rel=\"noopener noreferrer\" className=\"sub-CTA\">\n              <img id=\"medium\" src={medium_img} alt=\"Medium\" />\n            </a>\n            {reddit &&\n              <a href={reddit} target=\"_blank\" rel=\"noopener noreferrer\" className=\"sub-CTA\">\n                <img id=\"reddit\" src={reddit_img} alt=\"Reddit\" />\n              </a>\n            }\n          </div> */}\n        </a>\n        {/* {publishers &&\n          <div className=\"publishers-box\">\n            <p className=\"hat\">\n              PUBLISHED BY\n            </p>\n            <div className=\"publishers-container\">\n              {this.renderPublishers()}\n            </div>\n          </div>} */}\n      </div>\n    );\n  }\n}\n\nfunction matchDispatchToProps(dispatch) {\n  return bindActionCreators({\n    openPanel,\n    selectConcept,\n    selectTab\n  }, dispatch)\n}\n\nconst selector = createSelector(\n  state => state['concepts'],\n  (\n    concepts\n) => {\n    return  {\n      concepts\n    };\n  }\n);\n\nexport default connect(selector, matchDispatchToProps)(Concept);\n"]},"metadata":{},"sourceType":"module"}