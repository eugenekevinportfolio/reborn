{"ast":null,"code":"import _classCallCheck from \"/Users/Kevin/Code/reborn/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Kevin/Code/reborn/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Kevin/Code/reborn/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Kevin/Code/reborn/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Kevin/Code/reborn/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Kevin/Code/reborn/src/components/Tab.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { bindActionCreators } from 'redux';\nimport { openPanel, selectTab } from '../actions/index.js';\n\nvar Tab =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Tab, _Component);\n\n  function Tab() {\n    _classCallCheck(this, Tab);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Tab).apply(this, arguments));\n  }\n\n  _createClass(Tab, [{\n    key: \"tabStyle\",\n    value: function tabStyle() {\n      var _this$props = this.props,\n          panel = _this$props.panel,\n          id = _this$props.id,\n          selected_tab = _this$props.selected_tab,\n          tabs = _this$props.tabs,\n          burger = _this$props.burger;\n      var tabs_ids = Object.keys(tabs);\n      var tab_index = tabs_ids.indexOf(id);\n\n      if (burger) {\n        if (id === selected_tab) {\n          return {\n            backgroundColor: \"white\",\n            color: \"black\",\n            transitionDuration: \"0.5s\",\n            opacity: 1,\n            transitionDelay: \"0.15s\"\n          };\n        } else {\n          return {\n            opacity: 1,\n            transitionDelay: \"0.15s\"\n          };\n        }\n      } else {\n        return {\n          \"pointerEvents\": \"none\"\n        };\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props2 = this.props,\n          text = _this$props2.text,\n          panel = _this$props2.panel,\n          id = _this$props2.id,\n          window_dimensions = _this$props2.window_dimensions,\n          burger = _this$props2.burger;\n      return React.createElement(\"li\", {\n        onClick: function onClick() {\n          if (!(window_dimensions.isMobile && !burger)) {\n            var section_DOM = document.getElementById(id);\n            section_DOM.childNodes[0].scrollIntoView({\n              behavior: 'smooth'\n            });\n\n            if (panel.isOpen) {\n              _this.props.openPanel(false, \"\");\n            }\n          }\n        },\n        style: this.tabStyle(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, text);\n    }\n  }]);\n\n  return Tab;\n}(Component);\n\nfunction matchDispatchToProps(dispatch) {\n  return bindActionCreators({\n    openPanel: openPanel,\n    selectTab: selectTab\n  }, dispatch);\n}\n\nvar selector = createSelector(function (state) {\n  return state['panel'];\n}, function (state) {\n  return state['selected_tab'];\n}, function (state) {\n  return state['window_dimensions'];\n}, function (state) {\n  return state['tabs'];\n}, function (state) {\n  return state['burger'];\n}, function (panel, selected_tab, window_dimensions, tabs, burger) {\n  return {\n    panel: panel,\n    selected_tab: selected_tab,\n    window_dimensions: window_dimensions,\n    tabs: tabs,\n    burger: burger\n  };\n});\nexport default connect(selector, matchDispatchToProps)(Tab);","map":{"version":3,"sources":["/Users/Kevin/Code/reborn/src/components/Tab.js"],"names":["React","Component","connect","createSelector","bindActionCreators","openPanel","selectTab","Tab","props","panel","id","selected_tab","tabs","burger","tabs_ids","Object","keys","tab_index","indexOf","backgroundColor","color","transitionDuration","opacity","transitionDelay","text","window_dimensions","isMobile","section_DOM","document","getElementById","childNodes","scrollIntoView","behavior","isOpen","tabStyle","matchDispatchToProps","dispatch","selector","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { bindActionCreators } from 'redux';\nimport {\n  openPanel,\n  selectTab\n} from '../actions/index.js';\n\nclass Tab extends Component {\n  tabStyle() {\n    const { panel, id, selected_tab, tabs, burger } = this.props;\n\n    const tabs_ids = Object.keys(tabs);\n    const tab_index = tabs_ids.indexOf(id);\n    if (burger) {\n      if (id === selected_tab) {\n        return {\n          backgroundColor: \"white\",\n          color: \"black\",\n          transitionDuration: \"0.5s\",\n          opacity: 1,\n          transitionDelay: \"0.15s\"\n        }\n      }\n      else {\n        return {\n          opacity: 1,\n          transitionDelay: \"0.15s\"\n        }\n      }\n    }\n    else {\n      return {\n        \"pointerEvents\": \"none\"\n      }\n    }\n  }\n\n  render() {\n    const { text, panel, id, window_dimensions, burger } = this.props;\n    return (\n      <li\n        onClick={() => {\n          if (!(window_dimensions.isMobile && !burger)) {\n            const section_DOM = document.getElementById(id);\n            section_DOM.childNodes[0].scrollIntoView({\n              behavior: 'smooth'\n            });\n            if (panel.isOpen) {\n              this.props.openPanel(false, \"\");\n            }\n          }\n        }}\n        style={this.tabStyle()}>\n        {text}\n      </li>\n    );\n  }\n}\n\nfunction matchDispatchToProps(dispatch) {\n  return bindActionCreators({\n    openPanel,\n    selectTab\n  }, dispatch)\n}\n\nconst selector = createSelector(\n  state => state['panel'],\n  state => state['selected_tab'],\n  state => state['window_dimensions'],\n  state => state['tabs'],\n  state => state['burger'],\n  (\n    panel,\n    selected_tab,\n    window_dimensions,\n    tabs,\n    burger\n) => {\n    return  {\n      panel,\n      selected_tab,\n      window_dimensions,\n      tabs,\n      burger\n    };\n  }\n);\n\nexport default connect(selector, matchDispatchToProps)(Tab);\n"]},"metadata":{},"sourceType":"module"}