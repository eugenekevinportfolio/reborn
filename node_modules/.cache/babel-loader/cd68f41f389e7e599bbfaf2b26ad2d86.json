{"ast":null,"code":"import _classCallCheck from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Kevin/Desktop/reborn/src/components/Tab.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nvar Tab =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Tab, _Component);\n\n  function Tab() {\n    _classCallCheck(this, Tab);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Tab).apply(this, arguments));\n  }\n\n  _createClass(Tab, [{\n    key: \"tabStyle\",\n    value: function tabStyle() {\n      var _this$props = this.props,\n          panel = _this$props.panel,\n          id = _this$props.id;\n\n      if (panel.isOpen) {\n        if (panel.flavor !== id) {\n          return {\n            opacity: 0.3,\n            transitionDuration: \"0.5s\"\n          };\n        } else {\n          return {\n            backgroundColor: \"white\",\n            color: \"black\",\n            transitionDuration: \"0.5s\"\n          };\n        }\n      } else {}\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var text = this.props.text;\n      return React.createElement(\"li\", {\n        style: this.tabStyle(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, text.toUpperCase());\n    }\n  }]);\n\n  return Tab;\n}(Component);\n\nvar selector = createSelector(function (state) {\n  return state['panel'];\n}, function (panel) {\n  return {\n    panel: panel\n  };\n});\nexport default connect(selector)(Tab);","map":{"version":3,"sources":["/Users/Kevin/Desktop/reborn/src/components/Tab.js"],"names":["React","Component","connect","createSelector","Tab","props","panel","id","isOpen","flavor","opacity","transitionDuration","backgroundColor","color","text","tabStyle","toUpperCase","selector","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,UAA/B;;IAEMC,G;;;;;;;;;;;;;+BACO;AAAA,wBACa,KAAKC,KADlB;AAAA,UACDC,KADC,eACDA,KADC;AAAA,UACMC,EADN,eACMA,EADN;;AAGT,UAAID,KAAK,CAACE,MAAV,EAAkB;AAChB,YAAIF,KAAK,CAACG,MAAN,KAAiBF,EAArB,EAAyB;AACvB,iBAAO;AACLG,YAAAA,OAAO,EAAE,GADJ;AAELC,YAAAA,kBAAkB,EAAE;AAFf,WAAP;AAID,SALD,MAMK;AACH,iBAAO;AACLC,YAAAA,eAAe,EAAE,OADZ;AAELC,YAAAA,KAAK,EAAE,OAFF;AAGLF,YAAAA,kBAAkB,EAAE;AAHf,WAAP;AAKD;AACF,OAdD,MAeK,CAEJ;AACF;;;6BAEQ;AAAA,UACCG,IADD,GACU,KAAKT,KADf,CACCS,IADD;AAEP,aACE;AAAI,QAAA,KAAK,EAAE,KAAKC,QAAL,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,IAAI,CAACE,WAAL,EADH,CADF;AAKD;;;;EA/Bef,S;;AAkClB,IAAMgB,QAAQ,GAAGd,cAAc,CAC7B,UAAAe,KAAK;AAAA,SAAIA,KAAK,CAAC,OAAD,CAAT;AAAA,CADwB,EAE7B,UACEZ,KADF,EAEG;AACD,SAAQ;AACNA,IAAAA,KAAK,EAALA;AADM,GAAR;AAGD,CAR4B,CAA/B;AAWA,eAAeJ,OAAO,CAACe,QAAD,CAAP,CAAkBb,GAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\n\nclass Tab extends Component {\n  tabStyle() {\n    const { panel, id } = this.props;\n\n    if (panel.isOpen) {\n      if (panel.flavor !== id) {\n        return {\n          opacity: 0.3,\n          transitionDuration: \"0.5s\"\n        }\n      }\n      else {\n        return {\n          backgroundColor: \"white\",\n          color: \"black\",\n          transitionDuration: \"0.5s\"\n        }\n      }\n    }\n    else {\n\n    }\n  }\n\n  render() {\n    const { text } = this.props;\n    return (\n      <li style={this.tabStyle()}>\n        {text.toUpperCase()}\n      </li>\n    );\n  }\n}\n\nconst selector = createSelector(\n  state => state['panel'],\n  (\n    panel\n) => {\n    return  {\n      panel\n    };\n  }\n);\n\nexport default connect(selector)(Tab);\n"]},"metadata":{},"sourceType":"module"}