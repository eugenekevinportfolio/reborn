{"ast":null,"code":"import _classCallCheck from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Kevin/Desktop/reborn/src/components/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { bindActionCreators } from 'redux';\nimport { switchToMobile, switchToDesktop, storeWindowDimensions, selectConcept } from '../actions/index.js';\nimport Header from './Header.js';\nimport \"../styles/App.css\";\nimport map from \"lodash/map\";\nimport Concept from \"./Concept.js\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"updateDimensions\",\n    value: function updateDimensions() {\n      var _this = this;\n\n      var window_dimensions = this.props.window_dimensions;\n      this.timeout && clearTimeout(this.timeout);\n      this.timeout = setTimeout(function () {\n        _this.props.storeWindowDimensions(window.innerWidth, window.innerHeight);\n      }, 400);\n\n      if (window.innerWidth < 810) {\n        // Trigger mobile version\n        !window_dimensions.isMobile && this.props.switchToMobile();\n      } else {\n        // Trigger desktop version\n        !window_dimensions.isDesktop && this.props.switchToDesktop();\n      }\n    }\n  }, {\n    key: \"handleScroll\",\n    value: function handleScroll() {\n      var conceptsDOM = document.getElementsByClassName(\"concept-container\");\n\n      for (var i = 0; i < conceptsDOM.length; i++) {\n        if (conceptsDOM[i].getBoundingClientRect().top >= -120 && conceptsDOM[i].getBoundingClientRect().top <= 60) {\n          this.props.selectConcept(conceptsDOM[i].id);\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n      var window_dimensions = this.props.window_dimensions;\n      this.props.storeWindowDimensions(window.innerWidth, window.innerHeight);\n\n      if (window.innerWidth < 810) {\n        // Trigger mobile version\n        !window_dimensions.isMobile && this.props.switchToMobile();\n      } else {\n        // Trigger desktop version\n        !window_dimensions.isDesktop && this.props.switchToDesktop();\n      }\n    }\n  }, {\n    key: \"renderConcepts\",\n    value: function renderConcepts() {\n      var concepts = this.props.concepts;\n      return map(concepts, function (concept, id) {\n        return React.createElement(Concept, Object.assign({\n          key: id,\n          id: id\n        }, concept, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        onScroll: function onScroll() {\n          return _this2.handleScroll();\n        },\n        className: \"main-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), this.renderConcepts());\n    }\n  }]);\n\n  return App;\n}(Component);\n\nfunction matchDispatchToProps(dispatch) {\n  return bindActionCreators({\n    storeWindowDimensions: storeWindowDimensions,\n    switchToMobile: switchToMobile,\n    switchToDesktop: switchToDesktop,\n    selectConcept: selectConcept\n  }, dispatch);\n}\n\nvar selector = createSelector(function (state) {\n  return state['window_dimensions'];\n}, function (state) {\n  return state['concepts'];\n}, function (state) {\n  return state['selected_concept'];\n}, function (window_dimensions, concepts, selected_concept) {\n  return {\n    window_dimensions: window_dimensions,\n    concepts: concepts,\n    selected_concept: selected_concept\n  };\n});\nexport default connect(selector, matchDispatchToProps)(App);","map":{"version":3,"sources":["/Users/Kevin/Desktop/reborn/src/components/App.js"],"names":["React","Component","connect","createSelector","bindActionCreators","switchToMobile","switchToDesktop","storeWindowDimensions","selectConcept","Header","map","Concept","App","window_dimensions","props","timeout","clearTimeout","setTimeout","window","innerWidth","innerHeight","isMobile","isDesktop","conceptsDOM","document","getElementsByClassName","i","length","getBoundingClientRect","top","id","addEventListener","updateDimensions","bind","concepts","concept","handleScroll","renderConcepts","matchDispatchToProps","dispatch","selector","state","selected_concept"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { bindActionCreators } from 'redux';\nimport {\n  switchToMobile,\n  switchToDesktop,\n  storeWindowDimensions,\n  selectConcept\n} from '../actions/index.js';\nimport Header from './Header.js';\nimport \"../styles/App.css\";\nimport map from \"lodash/map\";\nimport Concept from \"./Concept.js\";\n\n\nclass App extends Component {\n  updateDimensions() {\n    const { window_dimensions } = this.props;\n    this.timeout && clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      this.props.storeWindowDimensions(window.innerWidth, window.innerHeight);\n    }, 400);\n\n    if (window.innerWidth < 810) {\n      // Trigger mobile version\n      !window_dimensions.isMobile && this.props.switchToMobile();\n    }\n    else {\n      // Trigger desktop version\n      !window_dimensions.isDesktop && this.props.switchToDesktop();\n    }\n  }\n\n  handleScroll() {\n    const conceptsDOM = document.getElementsByClassName(\"concept-container\");\n    for (let i = 0; i < conceptsDOM.length; i++) {\n      if (conceptsDOM[i].getBoundingClientRect().top >= -120 && conceptsDOM[i].getBoundingClientRect().top <= 60) {\n        this.props.selectConcept(conceptsDOM[i].id);\n      }\n    }\n\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n    const { window_dimensions } = this.props;\n    this.props.storeWindowDimensions(window.innerWidth, window.innerHeight);\n    if (window.innerWidth < 810) {\n      // Trigger mobile version\n      !window_dimensions.isMobile && this.props.switchToMobile();\n    }\n    else {\n      // Trigger desktop version\n      !window_dimensions.isDesktop && this.props.switchToDesktop();\n    }\n  }\n\n  renderConcepts() {\n    const { concepts } = this.props;\n    return (\n      map(\n        concepts,\n        (concept, id) => <Concept key={id} id={id} {...concept} />\n      )\n    );\n  }\n\n  render() {\n    return (\n      <div onScroll={() => this.handleScroll()} className=\"main-body\">\n        <Header />\n        {this.renderConcepts()}\n      </div>\n    )\n  }\n}\n\nfunction matchDispatchToProps(dispatch) {\n  return bindActionCreators({\n    storeWindowDimensions,\n    switchToMobile,\n    switchToDesktop,\n    selectConcept\n  }, dispatch)\n}\n\nconst selector = createSelector(\n  state => state['window_dimensions'],\n  state => state['concepts'],\n  state => state['selected_concept'],\n  (\n    window_dimensions,\n    concepts,\n    selected_concept\n) => {\n    return  {\n      window_dimensions,\n      concepts,\n      selected_concept\n    };\n  }\n);\n\nexport default connect(selector, matchDispatchToProps)(App);\n\n"]},"metadata":{},"sourceType":"module"}