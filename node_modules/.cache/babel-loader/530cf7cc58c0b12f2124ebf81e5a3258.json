{"ast":null,"code":"import _classCallCheck from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Kevin/Desktop/reborn/src/components/Concept.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { bindActionCreators } from 'redux';\nimport { openPanel, selectConcept, selectTab } from '../actions/index.js';\nimport reddit_img from '../img/RedditLogo.png';\nimport medium_img from '../img/MediumLogo.png';\nimport map from 'lodash/map';\nimport Publisher from './Publisher.js';\n\nvar Concept =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Concept, _Component);\n\n  function Concept() {\n    _classCallCheck(this, Concept);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Concept).apply(this, arguments));\n  }\n\n  _createClass(Concept, [{\n    key: \"renderPublishers\",\n    value: function renderPublishers() {\n      var publishers = this.props.publishers;\n      return map(publishers, function (publisher, id) {\n        return React.createElement(Publisher, Object.assign({\n          key: id,\n          id: id\n        }, publisher, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          title = _this$props.title,\n          date = _this$props.date,\n          description = _this$props.description,\n          id = _this$props.id,\n          concepts = _this$props.concepts,\n          ready = _this$props.ready,\n          reddit = _this$props.reddit,\n          medium = _this$props.medium,\n          publishers = _this$props.publishers;\n      return React.createElement(\"a\", {\n        onClick: function onClick() {\n          if (ready) {}\n        },\n        href: !ready && medium,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"concept-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"concept\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"hat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, date.toUpperCase()), React.createElement(\"h2\", {\n        className: \"head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, title), React.createElement(\"p\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, description), React.createElement(\"div\", {\n        className: \"CTA-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, ready && React.createElement(\"div\", {\n        onClick: function onClick() {\n          _this.props.selectConcept(id);\n\n          _this.props.selectTab(\"concepts\");\n\n          _this.props.openPanel(true, \"concepts\");\n        },\n        className: \"CTA\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"READ STORY\"), React.createElement(\"a\", {\n        href: medium,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"sub-CTA\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        id: \"medium\",\n        src: medium_img,\n        alt: \"Medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), reddit && React.createElement(\"a\", {\n        href: reddit,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"sub-CTA\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        id: \"reddit\",\n        src: reddit_img,\n        alt: \"Reddit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })))), publishers && React.createElement(\"div\", {\n        className: \"publishers-box\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"hat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"PUBLISHED BY\"), React.createElement(\"div\", {\n        className: \"publishers-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, this.renderPublishers())));\n    }\n  }]);\n\n  return Concept;\n}(Component);\n\nfunction matchDispatchToProps(dispatch) {\n  return bindActionCreators({\n    openPanel: openPanel,\n    selectConcept: selectConcept,\n    selectTab: selectTab\n  }, dispatch);\n}\n\nvar selector = createSelector(function (state) {\n  return state['concepts'];\n}, function (concepts) {\n  return {\n    concepts: concepts\n  };\n});\nexport default connect(selector, matchDispatchToProps)(Concept);","map":{"version":3,"sources":["/Users/Kevin/Desktop/reborn/src/components/Concept.js"],"names":["React","Component","connect","createSelector","bindActionCreators","openPanel","selectConcept","selectTab","reddit_img","medium_img","map","Publisher","Concept","publishers","props","publisher","id","title","date","description","concepts","ready","reddit","medium","toUpperCase","renderPublishers","matchDispatchToProps","dispatch","selector","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { bindActionCreators } from 'redux';\nimport {\n  openPanel,\n  selectConcept,\n  selectTab\n} from '../actions/index.js';\nimport reddit_img from '../img/RedditLogo.png';\nimport medium_img from '../img/MediumLogo.png';\nimport map from 'lodash/map';\nimport Publisher from './Publisher.js';\n\nclass Concept extends Component {\n  renderPublishers() {\n    const { publishers } = this.props;\n\n    return(\n      map(\n        publishers,\n        (publisher, id) => <Publisher key={id} id={id} {...publisher} />\n      )\n    );\n  }\n\n  render() {\n    const { title, date, description, id, concepts, ready, reddit, medium, publishers } = this.props;\n\n    return (\n      <a\n        onClick={() => {\n          if (ready) {\n            \n          }\n        }}\n        href={!ready && medium}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"concept-box\">\n        <div className=\"concept\">\n          <p className=\"hat\">\n            {date.toUpperCase()}\n          </p>\n          <h2 className=\"head\">\n            {title}\n          </h2>\n          <p className=\"description\">\n            {description}\n          </p>\n          <div className=\"CTA-row\">\n            {ready &&\n              <div\n                onClick={() => {\n                  this.props.selectConcept(id);\n                  this.props.selectTab(\"concepts\");\n                  this.props.openPanel(true, \"concepts\");\n                }}\n                className=\"CTA\">\n                READ STORY\n              </div>\n            }\n            <a href={medium} target=\"_blank\" rel=\"noopener noreferrer\" className=\"sub-CTA\">\n              <img id=\"medium\" src={medium_img} alt=\"Medium\" />\n            </a>\n            {reddit &&\n              <a href={reddit} target=\"_blank\" rel=\"noopener noreferrer\" className=\"sub-CTA\">\n                <img id=\"reddit\" src={reddit_img} alt=\"Reddit\" />\n              </a>\n            }\n          </div>\n        </div>\n        {publishers &&\n          <div className=\"publishers-box\">\n            <p className=\"hat\">\n              PUBLISHED BY\n            </p>\n            <div className=\"publishers-container\">\n              {this.renderPublishers()}\n            </div>\n          </div>}\n      </a>\n    );\n  }\n}\n\nfunction matchDispatchToProps(dispatch) {\n  return bindActionCreators({\n    openPanel,\n    selectConcept,\n    selectTab\n  }, dispatch)\n}\n\nconst selector = createSelector(\n  state => state['concepts'],\n  (\n    concepts\n) => {\n    return  {\n      concepts\n    };\n  }\n);\n\nexport default connect(selector, matchDispatchToProps)(Concept);\n"]},"metadata":{},"sourceType":"module"}