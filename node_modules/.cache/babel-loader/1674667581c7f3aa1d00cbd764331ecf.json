{"ast":null,"code":"import _classCallCheck from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Kevin/Desktop/reborn/src/components/Concept.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { bindActionCreators } from 'redux';\nimport { openPanel, selectConcept, selectTab } from '../actions/index.js';\nimport reddit_img from '../img/RedditLogo.png';\nimport medium_img from '../img/MediumLogo.png';\n\nvar Concept =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Concept, _Component);\n\n  function Concept() {\n    _classCallCheck(this, Concept);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Concept).apply(this, arguments));\n  }\n\n  _createClass(Concept, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          title = _this$props.title,\n          date = _this$props.date,\n          description = _this$props.description,\n          id = _this$props.id,\n          concepts = _this$props.concepts,\n          ready = _this$props.ready,\n          reddit = _this$props.reddit,\n          medium = _this$props.medium;\n      var concepts_keys = Object.keys(concepts);\n      var last_id = concepts_keys[concepts_keys.length - 1];\n      return React.createElement(\"div\", {\n        style: id === last_id ? {\n          borderBottom: \"none\"\n        } : {},\n        className: \"concept\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"hat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, date.toUpperCase()), React.createElement(\"h2\", {\n        className: \"head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, title), React.createElement(\"p\", {\n        className: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, description), React.createElement(\"div\", {\n        className: \"CTA-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, ready && React.createElement(\"div\", {\n        onClick: function onClick() {\n          _this.props.selectConcept(id);\n\n          _this.props.selectTab(\"concepts\");\n\n          _this.props.openPanel(true, \"concepts\");\n        },\n        className: \"CTA\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"READ STORY\"), React.createElement(\"a\", {\n        href: medium,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"sub-CTA\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        id: \"medium\",\n        src: medium_img,\n        alt: \"Medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })), reddit && React.createElement(\"a\", {\n        href: reddit,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"sub-CTA\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        id: \"reddit\",\n        src: reddit_img,\n        alt: \"Reddit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Concept;\n}(Component);\n\nfunction matchDispatchToProps(dispatch) {\n  return bindActionCreators({\n    openPanel: openPanel,\n    selectConcept: selectConcept,\n    selectTab: selectTab\n  }, dispatch);\n}\n\nvar selector = createSelector(function (state) {\n  return state['concepts'];\n}, function (concepts) {\n  return {\n    concepts: concepts\n  };\n});\nexport default connect(selector, matchDispatchToProps)(Concept);","map":{"version":3,"sources":["/Users/Kevin/Desktop/reborn/src/components/Concept.js"],"names":["React","Component","connect","createSelector","bindActionCreators","openPanel","selectConcept","selectTab","reddit_img","medium_img","Concept","props","title","date","description","id","concepts","ready","reddit","medium","concepts_keys","Object","keys","last_id","length","borderBottom","toUpperCase","matchDispatchToProps","dispatch","selector","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { bindActionCreators } from 'redux';\nimport {\n  openPanel,\n  selectConcept,\n  selectTab\n} from '../actions/index.js';\nimport reddit_img from '../img/RedditLogo.png';\nimport medium_img from '../img/MediumLogo.png';\n\nclass Concept extends Component {\n  render() {\n    const { title, date, description, id, concepts, ready, reddit, medium } = this.props;\n    const concepts_keys = Object.keys(concepts);\n    const last_id = concepts_keys[concepts_keys.length - 1];\n\n    return (\n      <div\n        style={id === last_id ? { borderBottom:\"none\" } : {}}\n        className=\"concept\">\n        <p className=\"hat\">\n          {date.toUpperCase()}\n        </p>\n        <h2 className=\"head\">\n          {title}\n        </h2>\n        <p className=\"description\">\n          {description}\n        </p>\n        <div className=\"CTA-row\">\n          {ready &&\n            <div\n              onClick={() => {\n                this.props.selectConcept(id);\n                this.props.selectTab(\"concepts\");\n                this.props.openPanel(true, \"concepts\");\n              }}\n              className=\"CTA\">\n              READ STORY\n            </div>\n          }\n          <a href={medium} target=\"_blank\" rel=\"noopener noreferrer\" className=\"sub-CTA\">\n            <img id=\"medium\" src={medium_img} alt=\"Medium\" />\n          </a>\n          {reddit &&\n            <a href={reddit} target=\"_blank\" rel=\"noopener noreferrer\" className=\"sub-CTA\">\n              <img id=\"reddit\" src={reddit_img} alt=\"Reddit\" />\n            </a>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction matchDispatchToProps(dispatch) {\n  return bindActionCreators({\n    openPanel,\n    selectConcept,\n    selectTab\n  }, dispatch)\n}\n\nconst selector = createSelector(\n  state => state['concepts'],\n  (\n    concepts\n) => {\n    return  {\n      concepts\n    };\n  }\n);\n\nexport default connect(selector, matchDispatchToProps)(Concept);\n"]},"metadata":{},"sourceType":"module"}