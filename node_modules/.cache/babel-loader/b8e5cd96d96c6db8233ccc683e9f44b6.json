{"ast":null,"code":"import _classCallCheck from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Kevin/Desktop/reborn/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { bindActionCreators } from \"redux\";\nimport { switchToMobile, switchToDesktop, storeWindowDimensions, selectConcept } from \"../actions/index.js\";\nimport Header from \"./Header.js\";\nimport \"../styles/App.css\";\nimport map from \"lodash/map\";\nimport Concept from \"./Concept.js\";\nimport Presentation from \"./Presentation.js\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      canScroll: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"updateDimensions\",\n    value: function updateDimensions() {\n      var _this2 = this;\n\n      var window_dimensions = this.props.window_dimensions;\n      this.timeout && clearTimeout(this.timeout);\n      this.timeout = setTimeout(function () {\n        _this2.props.storeWindowDimensions(window.innerWidth, window.innerHeight);\n      }, 400);\n\n      if (window.innerWidth < 810) {\n        // Trigger mobile version\n        !window_dimensions.isMobile && this.props.switchToMobile();\n      } else {\n        // Trigger desktop version\n        !window_dimensions.isDesktop && this.props.switchToDesktop();\n      }\n    }\n  }, {\n    key: \"handleScroll\",\n    value: function handleScroll() {\n      var selected_concept = this.props.selected_concept;\n      var canScroll = this.state.canScroll;\n      var conceptsDOM = document.getElementsByClassName(\"concept-container\");\n\n      for (var i = 0; i < conceptsDOM.length; i++) {\n        if (conceptsDOM[i].getBoundingClientRect().top >= -120 && conceptsDOM[i].getBoundingClientRect().top <= 60) {\n          selected_concept !== conceptsDOM[i].id && this.props.selectConcept(conceptsDOM[i].id);\n        }\n      }\n\n      var presentationDOM = document.getElementById(\"presentation-container\");\n\n      if (presentationDOM.getBoundingClientRect().top <= 0 || presentationDOM.getBoundingClientRect().bottom <= window.innerHeight) {\n        !canScroll && this.setState({\n          canScroll: true\n        });\n      } else {\n        canScroll && this.setState({\n          canScroll: false\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n      window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n      isSafari && window.addEventListener(\"scroll\", this.handleScroll.bind(this));\n      var vh = window.innerHeight * 0.01;\n      document.documentElement.style.setProperty(\"--vh\", \"\".concat(vh, \"px\"));\n      var window_dimensions = this.props.window_dimensions;\n      this.props.storeWindowDimensions(window.innerWidth, window.innerHeight);\n\n      if (window.innerWidth < 810) {\n        // Trigger mobile version\n        !window_dimensions.isMobile && this.props.switchToMobile();\n      } else {\n        // Trigger desktop version\n        !window_dimensions.isDesktop && this.props.switchToDesktop();\n      }\n    }\n  }, {\n    key: \"renderConcepts\",\n    value: function renderConcepts() {\n      var concepts = this.props.concepts;\n      return map(concepts, function (concept, id) {\n        return React.createElement(Concept, Object.assign({\n          key: id,\n          id: id\n        }, concept, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var canScroll = this.state.canScroll;\n      var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n      return React.createElement(\"div\", {\n        onScroll: function onScroll() {\n          return _this3.handleScroll();\n        },\n        className: \"main-body \" + (!isSafari ? \"main-body-not-safari\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), this.renderConcepts(), React.createElement(Presentation, {\n        canScroll: canScroll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nfunction matchDispatchToProps(dispatch) {\n  return bindActionCreators({\n    storeWindowDimensions: storeWindowDimensions,\n    switchToMobile: switchToMobile,\n    switchToDesktop: switchToDesktop,\n    selectConcept: selectConcept\n  }, dispatch);\n}\n\nvar selector = createSelector(function (state) {\n  return state[\"window_dimensions\"];\n}, function (state) {\n  return state[\"concepts\"];\n}, function (state) {\n  return state[\"selected_concept\"];\n}, function (window_dimensions, concepts, selected_concept) {\n  return {\n    window_dimensions: window_dimensions,\n    concepts: concepts,\n    selected_concept: selected_concept\n  };\n});\nexport default connect(selector, matchDispatchToProps)(App);","map":{"version":3,"sources":["/Users/Kevin/Desktop/reborn/src/components/App.js"],"names":["React","Component","connect","createSelector","bindActionCreators","switchToMobile","switchToDesktop","storeWindowDimensions","selectConcept","Header","map","Concept","Presentation","App","props","state","canScroll","window_dimensions","timeout","clearTimeout","setTimeout","window","innerWidth","innerHeight","isMobile","isDesktop","selected_concept","conceptsDOM","document","getElementsByClassName","i","length","getBoundingClientRect","top","id","presentationDOM","getElementById","bottom","setState","isSafari","test","navigator","userAgent","addEventListener","updateDimensions","bind","handleScroll","vh","documentElement","style","setProperty","concepts","concept","renderConcepts","matchDispatchToProps","dispatch","selector"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { bindActionCreators } from \"redux\";\nimport {\n  switchToMobile,\n  switchToDesktop,\n  storeWindowDimensions,\n  selectConcept\n} from \"../actions/index.js\";\nimport Header from \"./Header.js\";\nimport \"../styles/App.css\";\nimport map from \"lodash/map\";\nimport Concept from \"./Concept.js\";\nimport Presentation from \"./Presentation.js\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      canScroll: false\n    };\n  }\n\n  updateDimensions() {\n    const { window_dimensions } = this.props;\n    this.timeout && clearTimeout(this.timeout);\n\n    this.timeout = setTimeout(() => {\n      this.props.storeWindowDimensions(window.innerWidth, window.innerHeight);\n    }, 400);\n\n    if (window.innerWidth < 810) {\n      // Trigger mobile version\n      !window_dimensions.isMobile && this.props.switchToMobile();\n    } else {\n      // Trigger desktop version\n      !window_dimensions.isDesktop && this.props.switchToDesktop();\n    }\n  }\n\n  handleScroll() {\n    const { selected_concept } = this.props;\n    const { canScroll } = this.state;\n    const conceptsDOM = document.getElementsByClassName(\"concept-container\");\n    for (let i = 0; i < conceptsDOM.length; i++) {\n      if (\n        conceptsDOM[i].getBoundingClientRect().top >= -120 &&\n        conceptsDOM[i].getBoundingClientRect().top <= 60\n      ) {\n        selected_concept !== conceptsDOM[i].id &&\n          this.props.selectConcept(conceptsDOM[i].id);\n      }\n    }\n\n    const presentationDOM = document.getElementById(\"presentation-container\");\n    if (\n      presentationDOM.getBoundingClientRect().top <= 0 ||\n      presentationDOM.getBoundingClientRect().bottom <= window.innerHeight\n    ) {\n      !canScroll && this.setState({ canScroll: true });\n    } else {\n      canScroll && this.setState({ canScroll: false });\n    }\n  }\n\n  componentDidMount() {\n    const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n    isSafari && window.addEventListener(\"scroll\", this.handleScroll.bind(this));\n    let vh = window.innerHeight * 0.01;\n    document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n    const { window_dimensions } = this.props;\n    this.props.storeWindowDimensions(window.innerWidth, window.innerHeight);\n    if (window.innerWidth < 810) {\n      // Trigger mobile version\n      !window_dimensions.isMobile && this.props.switchToMobile();\n    } else {\n      // Trigger desktop version\n      !window_dimensions.isDesktop && this.props.switchToDesktop();\n    }\n  }\n\n  renderConcepts() {\n    const { concepts } = this.props;\n    return map(concepts, (concept, id) => (\n      <Concept key={id} id={id} {...concept} />\n    ));\n  }\n\n  render() {\n    const { canScroll } = this.state;\n    const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n\n    return (\n      <div\n        onScroll={() => this.handleScroll()}\n        className={\"main-body \" + (!isSafari ? \"main-body-not-safari\" : \"\")}\n      >\n        <Header />\n        {this.renderConcepts()}\n        <Presentation canScroll={canScroll} />\n      </div>\n    );\n  }\n}\n\nfunction matchDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      storeWindowDimensions,\n      switchToMobile,\n      switchToDesktop,\n      selectConcept\n    },\n    dispatch\n  );\n}\n\nconst selector = createSelector(\n  state => state[\"window_dimensions\"],\n  state => state[\"concepts\"],\n  state => state[\"selected_concept\"],\n  (window_dimensions, concepts, selected_concept) => {\n    return {\n      window_dimensions,\n      concepts,\n      selected_concept\n    };\n  }\n);\n\nexport default connect(\n  selector,\n  matchDispatchToProps\n)(App);\n"]},"metadata":{},"sourceType":"module"}