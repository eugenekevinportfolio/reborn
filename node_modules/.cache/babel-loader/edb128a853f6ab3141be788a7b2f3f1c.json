{"ast":null,"code":"import _classCallCheck from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Kevin/Desktop/reborn/src/components/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { bindActionCreators } from 'redux';\nimport Concepts from './Concepts.js';\nimport About from './About.js';\nimport Side from './Side.js';\nimport Panel from './Panel.js';\nimport '../styles/App.css';\nimport '../styles/Panel.css';\nimport { storeWindowDimensions, switchToMobile, switchToDesktop } from '../actions/index.js';\nimport logo from '../img/Logo.png';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"updateDimensions\",\n    value: function updateDimensions() {\n      var _this = this;\n\n      var window_dimensions = this.props.window_dimensions;\n      this.timeout && clearTimeout(this.timeout);\n      this.timeout = setTimeout(function () {\n        _this.props.storeWindowDimensions(window.innerWidth, window.innerHeight);\n      }, 400);\n\n      if (window.innerWidth < 650) {\n        // Trigger mobile version\n        !window_dimensions.isMobile && this.props.switchToMobile();\n      } else {\n        // Trigger desktop version\n        !window_dimensions.isDesktop && this.props.switchToDesktop();\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n      var window_dimensions = this.props.window_dimensions;\n      this.props.storeWindowDimensions(window.innerWidth, window.innerHeight);\n\n      if (window.innerWidth < 650) {\n        // Trigger mobile version\n        !window_dimensions.isMobile && this.props.switchToMobile();\n      } else {\n        // Trigger desktop version\n        !window_dimensions.isDesktop && this.props.switchToDesktop();\n      }\n\n      this.handleScroll = this.handleScroll.bind(this);\n      window.addEventListener(\"scroll\", this.handleScroll);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"scroll\", this.handleScroll);\n      this.handleScroll = undefined;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var panel = this.props.panel;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Side, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        alt: \"Logo\",\n        className: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"KEVIN EUGENE\")), React.createElement(\"h1\", {\n        className: \"big-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Welcome to my portfolio\"), React.createElement(\"p\", {\n        className: \"intro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"This is my portfolio. Please scroll down to have a look at a few of my UI-UX projects.\"), React.createElement(Concepts, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(About, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(Panel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nfunction matchDispatchToProps(dispatch) {\n  return bindActionCreators({\n    storeWindowDimensions: storeWindowDimensions,\n    switchToMobile: switchToMobile,\n    switchToDesktop: switchToDesktop\n  }, dispatch);\n}\n\nvar selector = createSelector(function (state) {\n  return state['window_dimensions'];\n}, function (state) {\n  return state['panel'];\n}, function (window_dimensions, panel) {\n  return {\n    window_dimensions: window_dimensions,\n    panel: panel\n  };\n});\nexport default connect(selector, matchDispatchToProps)(App);","map":{"version":3,"sources":["/Users/Kevin/Desktop/reborn/src/components/App.js"],"names":["React","Component","connect","createSelector","bindActionCreators","Concepts","About","Side","Panel","storeWindowDimensions","switchToMobile","switchToDesktop","logo","App","window_dimensions","props","timeout","clearTimeout","setTimeout","window","innerWidth","innerHeight","isMobile","isDesktop","addEventListener","updateDimensions","bind","handleScroll","removeEventListener","undefined","panel","matchDispatchToProps","dispatch","selector","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { bindActionCreators } from 'redux';\nimport Concepts from './Concepts.js';\nimport About from './About.js';\nimport Side from './Side.js';\nimport Panel from './Panel.js';\nimport '../styles/App.css';\nimport '../styles/Panel.css';\nimport {\n  storeWindowDimensions,\n  switchToMobile,\n  switchToDesktop\n} from '../actions/index.js';\nimport logo from '../img/Logo.png';\n\nclass App extends Component {\n  updateDimensions() {\n    const { window_dimensions } = this.props;\n    this.timeout && clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      this.props.storeWindowDimensions(window.innerWidth, window.innerHeight);\n    }, 400);\n\n    if (window.innerWidth < 650) {\n      // Trigger mobile version\n      !window_dimensions.isMobile && this.props.switchToMobile();\n    }\n    else {\n      // Trigger desktop version\n      !window_dimensions.isDesktop && this.props.switchToDesktop();\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n    const { window_dimensions } = this.props;\n    this.props.storeWindowDimensions(window.innerWidth, window.innerHeight);\n    if (window.innerWidth < 650) {\n      // Trigger mobile version\n      !window_dimensions.isMobile && this.props.switchToMobile();\n    }\n    else {\n      // Trigger desktop version\n      !window_dimensions.isDesktop && this.props.switchToDesktop();\n    }\n\n    this.handleScroll = this.handleScroll.bind(this);\n    window.addEventListener(\"scroll\", this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.handleScroll);\n    this.handleScroll = undefined;\n  }\n\n  render() {\n    const { panel } = this.props;\n\n    return (\n      <div className=\"App\">\n        <Side />\n        <div className=\"content\">\n          <div className=\"header\">\n            <img src={logo} alt=\"Logo\" className=\"logo\" />\n            <p>\n              KEVIN EUGENE\n            </p>\n          </div>\n          <h1 className=\"big-title\">\n            Welcome to my portfolio\n          </h1>\n          <p className=\"intro\">\n            This is my portfolio. Please scroll down to have a look at a few of my UI-UX projects.\n          </p>\n          <Concepts />\n          <About />\n          {/* {panel.isOpen && <Panel />} */}\n          <Panel />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction matchDispatchToProps(dispatch) {\n  return bindActionCreators({\n    storeWindowDimensions,\n    switchToMobile,\n    switchToDesktop\n  }, dispatch)\n}\n\n\nconst selector = createSelector(\n  state => state['window_dimensions'],\n  state => state['panel'],\n  (\n    window_dimensions,\n    panel\n) => {\n    return  {\n      window_dimensions,\n      panel\n    };\n  }\n);\n\nexport default connect(selector, matchDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}