{"ast":null,"code":"import _defineProperty from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Kevin/Desktop/reborn/src/components/Concept.js\";\nimport React, { Component } from 'react';\nimport out from \"../img/Out.svg\";\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport \"../styles/Concept.css\";\n\nvar Concept =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Concept, _Component);\n\n  function Concept() {\n    _classCallCheck(this, Concept);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Concept).apply(this, arguments));\n  }\n\n  _createClass(Concept, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.counter = 0;\n      this.updateRate = 10;\n      this.mouse = {\n        _x: 0,\n        _y: 0,\n        x: 0,\n        y: 0,\n        updatePosition: function updatePosition(event) {\n          var e = event || window.event;\n          this.x = e.clientX - this._x;\n          this.y = (e.clientY - this._y) * -1;\n        },\n        setOrigin: function setOrigin(e) {\n          console.log(e.offsetHeight);\n          this._x = e.offsetLeft + Math.floor(e.offsetWidth / 2);\n          this._y = e.offsetTop + Math.floor(e.offsetHeight / 2);\n        }\n      };\n      this.mouse.setOrigin(this.readOnMediumContainer);\n    }\n  }, {\n    key: \"update\",\n    value: function update(e) {\n      this.mouse.updatePosition(e);\n      console.log(this.mouse);\n      this.updateTransformStyle((this.mouse.y / this.readOnMedium.offsetHeight / 2).toFixed(2), (this.mouse.x / this.readOnMedium.offsetWidth / 2).toFixed(2));\n    }\n  }, {\n    key: \"isTimeToUpdate\",\n    value: function isTimeToUpdate() {\n      return this.counter++ % this.updateRate === 0;\n    }\n  }, {\n    key: \"updateTransformStyle\",\n    value: function updateTransformStyle(x, y) {\n      var style = \"rotateX(\" + x + \"deg) rotateY(\" + y + \"deg)\";\n      this.readOnMedium.style.transform = style;\n    }\n  }, {\n    key: \"onMouseMove\",\n    value: function onMouseMove(e) {\n      if (this.isTimeToUpdate()) {\n        this.update(e);\n      }\n    }\n  }, {\n    key: \"onMouseEnter\",\n    value: function onMouseEnter(e) {\n      this.update(e);\n    }\n  }, {\n    key: \"onMouseLeave\",\n    value: function onMouseLeave() {\n      this.readOnMedium.style = \"\";\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this,\n          _React$createElement;\n\n      var _this$props = this.props,\n          img_url = _this$props.img_url,\n          title = _this$props.title,\n          description = _this$props.description,\n          id = _this$props.id,\n          selected_concept = _this$props.selected_concept;\n      return React.createElement(\"div\", {\n        id: id,\n        className: \"concept-container\",\n        style: {\n          backgroundImage: \"url(\" + img_url + \")\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"concept-intro-container \" + (selected_concept === id ? \"selected-concept\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, description), React.createElement(\"div\", (_React$createElement = {\n        ref: function ref(_ref2) {\n          return _this.readOnMediumContainer = _ref2;\n        },\n        onMouseMove: function onMouseMove(e) {\n          return _this.onMouseMove(e);\n        },\n        onMouseEnter: function onMouseEnter(e) {\n          return _this.onMouseEnter(e);\n        }\n      }, _defineProperty(_React$createElement, \"onMouseEnter\", function onMouseEnter() {\n        return _this.onMouseLeave();\n      }), _defineProperty(_React$createElement, \"className\", \"read-on-medium-container\"), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), React.createElement(\"div\", {\n        ref: function ref(_ref) {\n          return _this.readOnMedium = _ref;\n        },\n        className: \"read-on-medium\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Read on Medium\"), React.createElement(\"img\", {\n        src: out,\n        alt: \"out\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Concept;\n}(Component);\n\nvar selector = createSelector(function (state) {\n  return state['selected_concept'];\n}, function (selected_concept) {\n  return {\n    selected_concept: selected_concept\n  };\n});\nexport default connect(selector)(Concept);","map":{"version":3,"sources":["/Users/Kevin/Desktop/reborn/src/components/Concept.js"],"names":["React","Component","connect","createSelector","Concept","counter","updateRate","mouse","_x","_y","x","y","updatePosition","event","e","window","clientX","clientY","setOrigin","console","log","offsetHeight","offsetLeft","Math","floor","offsetWidth","offsetTop","readOnMediumContainer","updateTransformStyle","readOnMedium","toFixed","style","transform","isTimeToUpdate","update","props","img_url","title","description","id","selected_concept","backgroundImage","ref","onMouseMove","onMouseEnter","onMouseLeave","out","selector","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport out from \"../img/Out.svg\";\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport \"../styles/Concept.css\";\n\nclass Concept extends Component {\n  componentDidMount() {\n    this.counter = 0;\n    this.updateRate = 10;\n    this.mouse = {\n      _x: 0,\n      _y: 0,\n      x: 0,\n      y: 0,\n      updatePosition: function(event) {\n        var e = event || window.event;\n        this.x = e.clientX - this._x;\n        this.y = (e.clientY - this._y) * -1;\n      },\n      setOrigin: function (e) {\n        console.log(e.offsetHeight)\n        this._x = e.offsetLeft + Math.floor(e.offsetWidth / 2);\n        this._y = e.offsetTop + Math.floor(e.offsetHeight / 2);\n      },\n    };\n    this.mouse.setOrigin(this.readOnMediumContainer);\n  }\n\n  update(e) {\n    this.mouse.updatePosition(e);\n    console.log(this.mouse)\n    this.updateTransformStyle(\n      (this.mouse.y / this.readOnMedium.offsetHeight / 2).toFixed(2),\n      (this.mouse.x / this.readOnMedium.offsetWidth / 2).toFixed(2)\n    );\n  }\n\n  isTimeToUpdate () {\n    return this.counter++ % this.updateRate === 0;\n  };\n  \n  updateTransformStyle(x,y) {\n    let style = \"rotateX(\" + x + \"deg) rotateY(\" + y + \"deg)\";\n    this.readOnMedium.style.transform = style;\n  }\n  \n  onMouseMove(e) {\n    if (this.isTimeToUpdate()) {\n      this.update(e);\n    }\n  }\n\n  onMouseEnter(e) {\n    this.update(e);\n  }\n\n  onMouseLeave() {\n    this.readOnMedium.style = \"\";\n  }\n\n  render() {\n    const { img_url, title, description, id, selected_concept } = this.props;\n\n    return (\n      <div id={id} className=\"concept-container\" style={{backgroundImage: \"url(\" + img_url + \")\"}}>\n        <div className={\"concept-intro-container \" + (selected_concept === id ? \"selected-concept\" : \"\")}>\n          <h2>\n            {title}\n          </h2>\n          <p>\n            {description}\n          </p>\n          <div \n            ref={(ref) => this.readOnMediumContainer = ref}\n            onMouseMove={(e) => this.onMouseMove(e)}\n            onMouseEnter={(e) => this.onMouseEnter(e)}\n            onMouseEnter={() => this.onMouseLeave()} \n            className=\"read-on-medium-container\">\n            <div ref={(ref) => this.readOnMedium = ref} className=\"read-on-medium\">\n              <p>\n                Read on Medium\n              </p>\n              <img src={out} alt=\"out\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst selector = createSelector(\n  state => state['selected_concept'],\n  (\n    selected_concept\n) => {\n    return  {\n      selected_concept\n    };\n  }\n);\n\nexport default connect(selector)(Concept);"]},"metadata":{},"sourceType":"module"}