{"ast":null,"code":"import _classCallCheck from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Kevin/Desktop/reborn/src/components/Panel.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { bindActionCreators } from 'redux';\nimport { openPanel, hideNavbar } from '../actions/index.js';\nimport close from '../img/Close.png';\nimport map from 'lodash/map';\nimport Chapter from './Chapter.js';\nimport Mogi from './Mogi.js';\nimport Chatroom from './Chatroom.js';\n\nvar Panel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Panel, _Component);\n\n  function Panel(props) {\n    var _this;\n\n    _classCallCheck(this, Panel);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Panel).call(this, props));\n    _this.state = {\n      desync_panel_open: false\n    };\n    return _this;\n  }\n\n  _createClass(Panel, [{\n    key: \"handleScroll\",\n    value: function handleScroll(e) {\n      var navbar_hidden = this.props.navbar_hidden;\n      var article_content = document.getElementById(\"panel-content\");\n      var deltaY = article_content.getBoundingClientRect().top - this.last_scroll_position;\n\n      if (deltaY > 10) {\n        navbar_hidden && this.props.hideNavbar(false);\n      } else if (deltaY < -15) {\n        !navbar_hidden && this.props.hideNavbar(true);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      setTimeout(function () {\n        _this2.setState({\n          desync_panel_open: true\n        });\n      }, 10);\n      this.handleScroll = this.handleScroll.bind(this);\n      window.addEventListener(\"scroll\", this.handleScroll);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"scroll\", this.handleScroll);\n      this.handleScroll = undefined;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var panel = this.props.panel;\n\n      if (prevProps.panel.isOpen && !panel.isOpen) {\n        this.setState({\n          desync_panel_open: false\n        });\n      }\n    }\n  }, {\n    key: \"panelStyle\",\n    value: function panelStyle() {\n      var window_dimensions = this.props.window_dimensions;\n      var desync_panel_open = this.state.desync_panel_open;\n\n      if (!desync_panel_open) {\n        return {\n          transform: \"translateY(-\".concat(window_dimensions.height + 30, \"px)\")\n        };\n      }\n    }\n  }, {\n    key: \"panelTopStyle\",\n    value: function panelTopStyle() {\n      var desync_panel_open = this.state.desync_panel_open;\n\n      if (!desync_panel_open) {\n        return {\n          transform: \"translateY(-180px)\"\n        };\n      }\n    }\n  }, {\n    key: \"renderChapters\",\n    value: function renderChapters() {\n      var _this$props = this.props,\n          chapters = _this$props.chapters,\n          selected_concept = _this$props.selected_concept;\n      return map(chapters[selected_concept], function (chapter, id) {\n        return React.createElement(Chapter, Object.assign({\n          key: id\n        }, chapter, {\n          id: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }));\n      });\n    }\n  }, {\n    key: \"renderArticle\",\n    value: function renderArticle() {\n      var selected_concept = this.props.selected_concept;\n\n      if (selected_concept === \"mogi\") {\n        return React.createElement(Mogi, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        });\n      } else if (selected_concept === \"chatroom\") {\n        return React.createElement(Chatroom, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props2 = this.props,\n          concepts = _this$props2.concepts,\n          selected_concept = _this$props2.selected_concept;\n      return React.createElement(\"div\", {\n        className: \"panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: this.panelTopStyle(),\n        className: \"panel-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"panel-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"big-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, concepts[selected_concept].title), React.createElement(\"img\", {\n        onClick: function onClick() {\n          return _this3.props.openPanel(false, \"\");\n        },\n        src: close,\n        alt: \"Close\",\n        className: \"close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"concept-chapters\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, this.renderChapters())), React.createElement(\"div\", {\n        style: this.panelStyle(),\n        className: \"panel-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, this.renderArticle()));\n    }\n  }]);\n\n  return Panel;\n}(Component);\n\nfunction matchDispatchToProps(dispatch) {\n  return bindActionCreators({\n    openPanel: openPanel\n  }, dispatch);\n}\n\nvar selector = createSelector(function (state) {\n  return state['window_dimensions'];\n}, function (state) {\n  return state['panel'];\n}, function (state) {\n  return state['chapters'];\n}, function (state) {\n  return state['selected_concept'];\n}, function (state) {\n  return state['concepts'];\n}, function (window_dimensions, panel, chapters, selected_concept, concepts) {\n  return {\n    window_dimensions: window_dimensions,\n    panel: panel,\n    chapters: chapters,\n    selected_concept: selected_concept,\n    concepts: concepts\n  };\n});\nexport default connect(selector, matchDispatchToProps)(Panel);","map":{"version":3,"sources":["/Users/Kevin/Desktop/reborn/src/components/Panel.js"],"names":["React","Component","connect","createSelector","bindActionCreators","openPanel","hideNavbar","close","map","Chapter","Mogi","Chatroom","Panel","props","state","desync_panel_open","e","navbar_hidden","article_content","document","getElementById","deltaY","getBoundingClientRect","top","last_scroll_position","setTimeout","setState","handleScroll","bind","window","addEventListener","removeEventListener","undefined","prevProps","panel","isOpen","window_dimensions","transform","height","chapters","selected_concept","chapter","id","concepts","panelTopStyle","title","renderChapters","panelStyle","renderArticle","matchDispatchToProps","dispatch","selector"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SACEC,SADF,EAEEC,UAFF,QAGO,qBAHP;AAIA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,eAArB;;IAEMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,iBAAiB,EAAE;AADR,KAAb;AAHiB;AAMlB;;;;iCAEYC,C,EAAG;AAAA,UACNC,aADM,GACY,KAAKJ,KADjB,CACNI,aADM;AAEd,UAAMC,eAAe,GAAGC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAxB;AACA,UAAMC,MAAM,GAAGH,eAAe,CAACI,qBAAhB,GAAwCC,GAAxC,GAA8C,KAAKC,oBAAlE;;AAEA,UAAIH,MAAM,GAAG,EAAb,EAAiB;AACfJ,QAAAA,aAAa,IAAI,KAAKJ,KAAL,CAAWP,UAAX,CAAsB,KAAtB,CAAjB;AACD,OAFD,MAGK,IAAIe,MAAM,GAAG,CAAC,EAAd,EAAkB;AACrB,SAACJ,aAAD,IAAkB,KAAKJ,KAAL,CAAWP,UAAX,CAAsB,IAAtB,CAAlB;AACD;AACF;;;wCAEmB;AAAA;;AAClBmB,MAAAA,UAAU,CAAC,YAAM;AACf,QAAA,MAAI,CAACC,QAAL,CAAc;AACZX,UAAAA,iBAAiB,EAAE;AADP,SAAd;AAGD,OAJS,EAIP,EAJO,CAAV;AAMA,WAAKY,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACAC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKH,YAAvC;AACD;;;2CAEsB;AACrBE,MAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqC,KAAKJ,YAA1C;AACA,WAAKA,YAAL,GAAoBK,SAApB;AACD;;;uCAEkBC,S,EAAW;AAAA,UACpBC,KADoB,GACV,KAAKrB,KADK,CACpBqB,KADoB;;AAG5B,UAAID,SAAS,CAACC,KAAV,CAAgBC,MAAhB,IAA0B,CAACD,KAAK,CAACC,MAArC,EAA6C;AAC3C,aAAKT,QAAL,CAAc;AACZX,UAAAA,iBAAiB,EAAE;AADP,SAAd;AAGD;AACF;;;iCAEY;AAAA,UACHqB,iBADG,GACmB,KAAKvB,KADxB,CACHuB,iBADG;AAAA,UAEHrB,iBAFG,GAEmB,KAAKD,KAFxB,CAEHC,iBAFG;;AAIX,UAAI,CAACA,iBAAL,EAAwB;AACtB,eAAO;AACLsB,UAAAA,SAAS,wBAAiBD,iBAAiB,CAACE,MAAlB,GAAyB,EAA1C;AADJ,SAAP;AAGD;AACF;;;oCAEe;AAAA,UACNvB,iBADM,GACgB,KAAKD,KADrB,CACNC,iBADM;;AAGd,UAAI,CAACA,iBAAL,EAAwB;AACtB,eAAO;AACLsB,UAAAA,SAAS,EAAE;AADN,SAAP;AAGD;AACF;;;qCAEgB;AAAA,wBACuB,KAAKxB,KAD5B;AAAA,UACP0B,QADO,eACPA,QADO;AAAA,UACEC,gBADF,eACEA,gBADF;AAGf,aACEhC,GAAG,CACD+B,QAAQ,CAACC,gBAAD,CADP,EAED,UAACC,OAAD,EAAUC,EAAV;AAAA,eAAiB,oBAAC,OAAD;AAAS,UAAA,GAAG,EAAEA;AAAd,WAAsBD,OAAtB;AAA+B,UAAA,EAAE,EAAEC,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAjB;AAAA,OAFC,CADL;AAMD;;;oCAEe;AAAA,UACNF,gBADM,GACe,KAAK3B,KADpB,CACN2B,gBADM;;AAGd,UAAIA,gBAAgB,KAAK,MAAzB,EAAiC;AAC/B,eAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFD,MAGK,IAAIA,gBAAgB,KAAK,UAAzB,EAAqC;AACxC,eAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF;;;6BAEQ;AAAA;;AAAA,yBACgC,KAAK3B,KADrC;AAAA,UACC8B,QADD,gBACCA,QADD;AAAA,UACWH,gBADX,gBACWA,gBADX;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,KAAK,EAAE,KAAKI,aAAL,EADT;AAEE,QAAA,SAAS,EAAC,WAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,QAAQ,CAACH,gBAAD,CAAR,CAA2BK,KAD9B,CADF,EAIE;AACE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAAChC,KAAL,CAAWR,SAAX,CAAqB,KAArB,EAA4B,EAA5B,CAAN;AAAA,SADX;AAEE,QAAA,GAAG,EAAEE,KAFP;AAGE,QAAA,GAAG,EAAC,OAHN;AAIE,QAAA,SAAS,EAAC,OAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CAHF,EAcE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKuC,cAAL,EADH,CAdF,CADF,EAmBE;AACE,QAAA,KAAK,EAAE,KAAKC,UAAL,EADT;AAEE,QAAA,SAAS,EAAC,iBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGG,KAAKC,aAAL,EAHH,CAnBF,CADF;AA2BD;;;;EAxHiB/C,S;;AA2HpB,SAASgD,oBAAT,CAA8BC,QAA9B,EAAwC;AACtC,SAAO9C,kBAAkB,CAAC;AACxBC,IAAAA,SAAS,EAATA;AADwB,GAAD,EAEtB6C,QAFsB,CAAzB;AAGD;;AAED,IAAMC,QAAQ,GAAGhD,cAAc,CAC7B,UAAAW,KAAK;AAAA,SAAIA,KAAK,CAAC,mBAAD,CAAT;AAAA,CADwB,EAE7B,UAAAA,KAAK;AAAA,SAAIA,KAAK,CAAC,OAAD,CAAT;AAAA,CAFwB,EAG7B,UAAAA,KAAK;AAAA,SAAIA,KAAK,CAAC,UAAD,CAAT;AAAA,CAHwB,EAI7B,UAAAA,KAAK;AAAA,SAAIA,KAAK,CAAC,kBAAD,CAAT;AAAA,CAJwB,EAK7B,UAAAA,KAAK;AAAA,SAAIA,KAAK,CAAC,UAAD,CAAT;AAAA,CALwB,EAM7B,UACEsB,iBADF,EAEEF,KAFF,EAGEK,QAHF,EAIEC,gBAJF,EAKEG,QALF,EAMG;AACD,SAAQ;AACNP,IAAAA,iBAAiB,EAAjBA,iBADM;AAENF,IAAAA,KAAK,EAALA,KAFM;AAGNK,IAAAA,QAAQ,EAARA,QAHM;AAINC,IAAAA,gBAAgB,EAAhBA,gBAJM;AAKNG,IAAAA,QAAQ,EAARA;AALM,GAAR;AAOD,CApB4B,CAA/B;AAuBA,eAAezC,OAAO,CAACiD,QAAD,EAAWF,oBAAX,CAAP,CAAwCrC,KAAxC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { bindActionCreators } from 'redux';\nimport {\n  openPanel,\n  hideNavbar\n} from '../actions/index.js';\nimport close from '../img/Close.png';\nimport map from 'lodash/map';\nimport Chapter from './Chapter.js';\nimport Mogi from './Mogi.js';\nimport Chatroom from './Chatroom.js';\n\nclass Panel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      desync_panel_open: false,\n    }\n  }\n\n  handleScroll(e) {\n    const { navbar_hidden } = this.props;\n    const article_content = document.getElementById(\"panel-content\");\n    const deltaY = article_content.getBoundingClientRect().top - this.last_scroll_position;\n\n    if (deltaY > 10) {\n      navbar_hidden && this.props.hideNavbar(false);\n    }\n    else if (deltaY < -15) {\n      !navbar_hidden && this.props.hideNavbar(true);\n    }\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        desync_panel_open: true\n      })\n    }, 10);\n\n    this.handleScroll = this.handleScroll.bind(this);\n    window.addEventListener(\"scroll\", this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"scroll\", this.handleScroll);\n    this.handleScroll = undefined;\n  }\n\n  componentDidUpdate(prevProps) {\n    const { panel } = this.props;\n\n    if (prevProps.panel.isOpen && !panel.isOpen) {\n      this.setState({\n        desync_panel_open: false\n      })\n    }\n  }\n\n  panelStyle() {\n    const { window_dimensions } = this.props;\n    const { desync_panel_open } = this.state;\n\n    if (!desync_panel_open) {\n      return {\n        transform: `translateY(-${window_dimensions.height+30}px)`\n      }\n    }\n  }\n\n  panelTopStyle() {\n    const { desync_panel_open } = this.state;\n\n    if (!desync_panel_open) {\n      return {\n        transform: \"translateY(-180px)\"\n      }\n    }\n  }\n\n  renderChapters() {\n    const { chapters,selected_concept } = this.props;\n\n    return(\n      map(\n        chapters[selected_concept],\n        (chapter, id) => <Chapter key={id} {...chapter} id={id} />\n      )\n    );\n  }\n\n  renderArticle() {\n    const { selected_concept } = this.props;\n\n    if (selected_concept === \"mogi\") {\n      return <Mogi />\n    }\n    else if (selected_concept === \"chatroom\") {\n      return <Chatroom />\n    }\n  }\n\n  render() {\n    const { concepts, selected_concept } = this.props;\n    return (\n      <div className=\"panel\">\n        <div\n          style={this.panelTopStyle()}\n          className=\"panel-top\">\n          <div className=\"panel-header\">\n            <h1 className=\"big-title\">\n              {concepts[selected_concept].title}\n            </h1>\n            <img\n              onClick={() => this.props.openPanel(false, \"\")}\n              src={close}\n              alt=\"Close\"\n              className=\"close\"\n            />\n          </div>\n          <div className=\"concept-chapters\">\n            {this.renderChapters()}\n          </div>\n        </div>\n        <div\n          style={this.panelStyle()}\n          className=\"panel-container\">\n          {this.renderArticle()}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction matchDispatchToProps(dispatch) {\n  return bindActionCreators({\n    openPanel\n  }, dispatch)\n}\n\nconst selector = createSelector(\n  state => state['window_dimensions'],\n  state => state['panel'],\n  state => state['chapters'],\n  state => state['selected_concept'],\n  state => state['concepts'],\n  (\n    window_dimensions,\n    panel,\n    chapters,\n    selected_concept,\n    concepts\n) => {\n    return  {\n      window_dimensions,\n      panel,\n      chapters,\n      selected_concept,\n      concepts\n    };\n  }\n);\n\nexport default connect(selector, matchDispatchToProps)(Panel);\n"]},"metadata":{},"sourceType":"module"}