{"ast":null,"code":"import _classCallCheck from \"/Users/Kevin/Code/reborn/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Kevin/Code/reborn/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Kevin/Code/reborn/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Kevin/Code/reborn/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Kevin/Code/reborn/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Kevin/Code/reborn/src/components/ArticleHero.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport $ from \"jquery\";\nimport youtubeArticle from \"../img/YoutubeArticle.jpg\";\nimport \"../styles/ArticleHero.css\";\n\nvar ArticleHero =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ArticleHero, _Component);\n\n  function ArticleHero(props) {\n    var _this;\n\n    _classCallCheck(this, ArticleHero);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ArticleHero).call(this, props));\n    _this.state = {\n      passedIntro: false\n    };\n    return _this;\n  }\n\n  _createClass(ArticleHero, [{\n    key: \"onImageLoaded\",\n    value: function onImageLoaded() {\n      this.setState({\n        passedIntro: true\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.setState({\n        passedIntro: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          hasScrolled = _this$props.hasScrolled,\n          concepts = _this$props.concepts,\n          selected_concept = _this$props.selected_concept;\n      var passedIntro = this.state.passedIntro;\n      var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n      var img_article = selected_concept && concepts[selected_concept].img_article;\n      var darkMode = selected_concept && concepts[selected_concept].darkMode;\n      return React.createElement(\"div\", {\n        id: \"hero\",\n        className: \"section hero\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"Loader\",\n        className: \"image-loader\",\n        src: img_article,\n        onLoad: function onLoad() {\n          return _this2.onImageLoaded();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"hero-image-container \" + (passedIntro ? \"hero-image-container--visible\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"hero-image-gradient \" + (darkMode ? \"hero-image-gradient--dark\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          backgroundImage: darkMode ? \"linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)), url(\".concat(img_article, \")\") : \"linear-gradient(rgba(255, 255, 255, 0), rgba(255, 255, 255, 1)), url(\".concat(img_article, \")\")\n        },\n        className: \"hero-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"max-width\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"article-title-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"article-type \" + (darkMode ? \"article-type--dark\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Case Study\"), React.createElement(\"h1\", {\n        className: \"article-title \" + (darkMode ? \"text--dark \" : \"\") // (passedIntro ? \"article-title--visible\" : \"\")\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, selected_concept && concepts[selected_concept].title)), React.createElement(\"div\", {\n        onClick: function onClick() {\n          $([document.documentElement, document.body]).animate({\n            scrollTop: $(\"#article-body\").offset().top\n          }, 800);\n        },\n        className: \"scroll-container \" + (hasScrolled ? \"scroll-container--transparent\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"scroll-text \" + (darkMode ? \"scroll-text--dark\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, selected_concept && concepts[selected_concept].scroll), React.createElement(\"div\", {\n        className: \"scroll-bar \" + (darkMode ? \"scroll-bar--dark\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ArticleHero;\n}(Component);\n\nvar selector = createSelector(function (state) {\n  return state[\"concepts\"];\n}, function (state) {\n  return state[\"selected_concept\"];\n}, function (concepts, selected_concept) {\n  return {\n    concepts: concepts,\n    selected_concept: selected_concept\n  };\n});\nexport default connect(selector)(ArticleHero);","map":{"version":3,"sources":["/Users/Kevin/Code/reborn/src/components/ArticleHero.js"],"names":["React","Component","connect","createSelector","$","youtubeArticle","ArticleHero","props","state","passedIntro","setState","hasScrolled","concepts","selected_concept","isSafari","test","navigator","userAgent","img_article","darkMode","onImageLoaded","backgroundImage","title","document","documentElement","body","animate","scrollTop","offset","top","scroll","selector"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport $ from \"jquery\";\nimport youtubeArticle from \"../img/YoutubeArticle.jpg\";\nimport \"../styles/ArticleHero.css\";\n\nclass ArticleHero extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      passedIntro: false\n    };\n  }\n\n  onImageLoaded() {\n    this.setState({ passedIntro: true });\n  }\n\n  componentWillUnmount() {\n    this.setState({ passedIntro: false });\n  }\n\n  render() {\n    const { hasScrolled, concepts, selected_concept } = this.props;\n    const { passedIntro } = this.state;\n    const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n    const img_article =\n      selected_concept && concepts[selected_concept].img_article;\n    const darkMode = selected_concept && concepts[selected_concept].darkMode;\n\n    return (\n      <div id=\"hero\" className=\"section hero\">\n        <img\n          alt=\"Loader\"\n          className=\"image-loader\"\n          src={img_article}\n          onLoad={() => this.onImageLoaded()}\n        />\n\n        <div\n          className={\n            \"hero-image-container \" +\n            (passedIntro ? \"hero-image-container--visible\" : \"\")\n          }\n        >\n          <div\n            className={\n              \"hero-image-gradient \" +\n              (darkMode ? \"hero-image-gradient--dark\" : \"\")\n            }\n          />\n          <div\n            style={{\n              backgroundImage: darkMode\n                ? `linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)), url(${img_article})`\n                : `linear-gradient(rgba(255, 255, 255, 0), rgba(255, 255, 255, 1)), url(${img_article})`\n            }}\n            className=\"hero-image\"\n          />\n        </div>\n\n        {/* <div\n          alt=\"Article Thumbnail\"\n          style={{\n            backgroundImage: darkMode\n              ? `linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1) 80%), url(${img_article})`\n              : `linear-gradient(rgba(255, 255, 255, 0), rgba(255, 255, 255, 1) 80%), url(${img_article})`\n          }}\n          className={\n            \"article-hero-image \" +\n            (hasScrolled ? \"article-hero-image--transparent \" : \"\") +\n            (hasScrolled && isSafari\n              ? \"article-hero-image--transparent--safari \"\n              : \"\") +\n            (!passedIntro ? \"article-hero-image--before-intro\" : \"\")\n          }\n        /> */}\n\n        <div className=\"max-width\">\n          <div className=\"article-title-container\">\n            <p\n              className={\n                \"article-type \" + (darkMode ? \"article-type--dark\" : \"\")\n              }\n            >\n              Case Study\n            </p>\n            <h1\n              className={\n                \"article-title \" + (darkMode ? \"text--dark \" : \"\")\n                // (passedIntro ? \"article-title--visible\" : \"\")\n              }\n            >\n              {selected_concept && concepts[selected_concept].title}\n            </h1>\n            {/* <p\n              className={\n                \"article-description \" + (darkMode ? \"text--dark\" : \"\")\n              }\n            >\n              {selected_concept && concepts[selected_concept].sub}\n            </p> */}\n          </div>\n          <div\n            onClick={() => {\n              $([document.documentElement, document.body]).animate(\n                {\n                  scrollTop: $(\"#article-body\").offset().top\n                },\n                800\n              );\n            }}\n            className={\n              \"scroll-container \" +\n              (hasScrolled ? \"scroll-container--transparent\" : \"\")\n            }\n          >\n            <p\n              className={\"scroll-text \" + (darkMode ? \"scroll-text--dark\" : \"\")}\n            >\n              {selected_concept && concepts[selected_concept].scroll}\n            </p>\n            <div\n              className={\"scroll-bar \" + (darkMode ? \"scroll-bar--dark\" : \"\")}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst selector = createSelector(\n  state => state[\"concepts\"],\n  state => state[\"selected_concept\"],\n  (concepts, selected_concept) => {\n    return {\n      concepts,\n      selected_concept\n    };\n  }\n);\n\nexport default connect(selector)(ArticleHero);\n"]},"metadata":{},"sourceType":"module"}