{"ast":null,"code":"import _classCallCheck from \"/Users/Kevin/Code/reborn/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Kevin/Code/reborn/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Kevin/Code/reborn/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Kevin/Code/reborn/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Kevin/Code/reborn/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Kevin/Code/reborn/src/components/Burger.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { bindActionCreators } from \"redux\";\nimport { openBurger } from \"../actions/index.js\";\n\nvar Burger =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Burger, _Component);\n\n  function Burger() {\n    _classCallCheck(this, Burger);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Burger).apply(this, arguments));\n  }\n\n  _createClass(Burger, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var isBurgerOpen = this.props.isBurgerOpen;\n      return React.createElement(\"div\", {\n        className: \"burger\",\n        onClick: function onClick() {\n          return _this.props.openBurger(!isBurgerOpen);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"top-bar \" + (isBurgerOpen ? \"top-bar-open\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"bottom-bar \" + (isBurgerOpen ? \"bottom-bar-open\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Burger;\n}(Component);\n\nfunction matchDispatchToProps(dispatch) {\n  return bindActionCreators({\n    openBurger: openBurger\n  }, dispatch);\n}\n\nvar selector = createSelector(function (state) {\n  return state[\"isBurgerOpen\"];\n}, function (isBurgerOpen) {\n  return {\n    isBurgerOpen: isBurgerOpen\n  };\n});\nexport default connect(selector, matchDispatchToProps)(Burger);","map":{"version":3,"sources":["/Users/Kevin/Code/reborn/src/components/Burger.js"],"names":["React","Component","connect","createSelector","bindActionCreators","openBurger","Burger","isBurgerOpen","props","matchDispatchToProps","dispatch","selector","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,UAAT,QAA2B,qBAA3B;;IAEMC,M;;;;;;;;;;;;;6BACK;AAAA;;AAAA,UACCC,YADD,GACkB,KAAKC,KADvB,CACCD,YADD;AAEP,aACE;AACE,QAAA,SAAS,EAAC,QADZ;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACC,KAAL,CAAWH,UAAX,CAAsB,CAACE,YAAvB,CAAN;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAK,QAAA,SAAS,EAAE,cAAcA,YAAY,GAAG,cAAH,GAAoB,EAA9C,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE;AACE,QAAA,SAAS,EAAE,iBAAiBA,YAAY,GAAG,iBAAH,GAAuB,EAApD,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AAWD;;;;EAdkBN,S;;AAiBrB,SAASQ,oBAAT,CAA8BC,QAA9B,EAAwC;AACtC,SAAON,kBAAkB,CACvB;AACEC,IAAAA,UAAU,EAAVA;AADF,GADuB,EAIvBK,QAJuB,CAAzB;AAMD;;AAED,IAAMC,QAAQ,GAAGR,cAAc,CAC7B,UAAAS,KAAK;AAAA,SAAIA,KAAK,CAAC,cAAD,CAAT;AAAA,CADwB,EAE7B,UAAAL,YAAY,EAAI;AACd,SAAO;AACLA,IAAAA,YAAY,EAAZA;AADK,GAAP;AAGD,CAN4B,CAA/B;AASA,eAAeL,OAAO,CACpBS,QADoB,EAEpBF,oBAFoB,CAAP,CAGbH,MAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { bindActionCreators } from \"redux\";\nimport { openBurger } from \"../actions/index.js\";\n\nclass Burger extends Component {\n  render() {\n    const { isBurgerOpen } = this.props;\n    return (\n      <div\n        className=\"burger\"\n        onClick={() => this.props.openBurger(!isBurgerOpen)}\n      >\n        <div className={\"top-bar \" + (isBurgerOpen ? \"top-bar-open\" : \"\")} />\n        <div\n          className={\"bottom-bar \" + (isBurgerOpen ? \"bottom-bar-open\" : \"\")}\n        />\n      </div>\n    );\n  }\n}\n\nfunction matchDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      openBurger\n    },\n    dispatch\n  );\n}\n\nconst selector = createSelector(\n  state => state[\"isBurgerOpen\"],\n  isBurgerOpen => {\n    return {\n      isBurgerOpen\n    };\n  }\n);\n\nexport default connect(\n  selector,\n  matchDispatchToProps\n)(Burger);\n"]},"metadata":{},"sourceType":"module"}