{"ast":null,"code":"import _classCallCheck from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Kevin/Desktop/reborn/src/components/Tab.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { bindActionCreators } from 'redux';\nimport { openPanel, selectTab } from '../actions/index.js';\n\nvar Tab =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Tab, _Component);\n\n  function Tab() {\n    _classCallCheck(this, Tab);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Tab).apply(this, arguments));\n  }\n\n  _createClass(Tab, [{\n    key: \"tabStyle\",\n    value: function tabStyle() {\n      var _this$props = this.props,\n          panel = _this$props.panel,\n          id = _this$props.id,\n          selected_tab = _this$props.selected_tab;\n\n      if (id === selected_tab) {\n        return {\n          backgroundColor: \"white\",\n          color: \"black\",\n          transitionDuration: \"0.5s\"\n        };\n      } else {\n        if (panel.isOpen) {\n          if (panel.flavor !== id) {\n            return {\n              opacity: 0.3,\n              transitionDuration: \"0.5s\"\n            };\n          } else {\n            return {\n              backgroundColor: \"white\",\n              color: \"black\",\n              transitionDuration: \"0.5s\"\n            };\n          }\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props2 = this.props,\n          text = _this$props2.text,\n          panel = _this$props2.panel,\n          id = _this$props2.id;\n      return React.createElement(\"li\", {\n        onClick: function onClick() {\n          if (panel.isOpen) {\n            _this.props.openPanel(false, \"\");\n\n            _this.props.selectTab(id);\n\n            var section_id = document.getElementById(id);\n            section_id.scrollIntoView({\n              behavior: 'smooth'\n            });\n          }\n        },\n        style: this.tabStyle(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, text.toUpperCase());\n    }\n  }]);\n\n  return Tab;\n}(Component);\n\nfunction matchDispatchToProps(dispatch) {\n  return bindActionCreators({\n    openPanel: openPanel,\n    selectTab: selectTab\n  }, dispatch);\n}\n\nvar selector = createSelector(function (state) {\n  return state['panel'];\n}, function (state) {\n  return state['selected_tab'];\n}, function (panel, selected_tab) {\n  return {\n    panel: panel,\n    selected_tab: selected_tab\n  };\n});\nexport default connect(selector, matchDispatchToProps)(Tab);","map":{"version":3,"sources":["/Users/Kevin/Desktop/reborn/src/components/Tab.js"],"names":["React","Component","connect","createSelector","bindActionCreators","openPanel","selectTab","Tab","props","panel","id","selected_tab","backgroundColor","color","transitionDuration","isOpen","flavor","opacity","text","section_id","document","getElementById","scrollIntoView","behavior","tabStyle","toUpperCase","matchDispatchToProps","dispatch","selector","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SACEC,SADF,EAEEC,SAFF,QAGO,qBAHP;;IAKMC,G;;;;;;;;;;;;;+BACO;AAAA,wBAC2B,KAAKC,KADhC;AAAA,UACDC,KADC,eACDA,KADC;AAAA,UACMC,EADN,eACMA,EADN;AAAA,UACUC,YADV,eACUA,YADV;;AAGT,UAAID,EAAE,KAAKC,YAAX,EAAyB;AACvB,eAAO;AACLC,UAAAA,eAAe,EAAE,OADZ;AAELC,UAAAA,KAAK,EAAE,OAFF;AAGLC,UAAAA,kBAAkB,EAAE;AAHf,SAAP;AAKD,OAND,MAOK;AACH,YAAIL,KAAK,CAACM,MAAV,EAAkB;AAChB,cAAIN,KAAK,CAACO,MAAN,KAAiBN,EAArB,EAAyB;AACvB,mBAAO;AACLO,cAAAA,OAAO,EAAE,GADJ;AAELH,cAAAA,kBAAkB,EAAE;AAFf,aAAP;AAID,WALD,MAMK;AACH,mBAAO;AACLF,cAAAA,eAAe,EAAE,OADZ;AAELC,cAAAA,KAAK,EAAE,OAFF;AAGLC,cAAAA,kBAAkB,EAAE;AAHf,aAAP;AAKD;AACF;AACF;AACF;;;6BAEQ;AAAA;;AAAA,yBACqB,KAAKN,KAD1B;AAAA,UACCU,IADD,gBACCA,IADD;AAAA,UACOT,KADP,gBACOA,KADP;AAAA,UACcC,EADd,gBACcA,EADd;AAEP,aACE;AACE,QAAA,OAAO,EAAE,mBAAM;AACb,cAAID,KAAK,CAACM,MAAV,EAAkB;AAChB,YAAA,KAAI,CAACP,KAAL,CAAWH,SAAX,CAAqB,KAArB,EAA4B,EAA5B;;AACA,YAAA,KAAI,CAACG,KAAL,CAAWF,SAAX,CAAqBI,EAArB;;AACA,gBAAMS,UAAU,GAAGC,QAAQ,CAACC,cAAT,CAAwBX,EAAxB,CAAnB;AACAS,YAAAA,UAAU,CAACG,cAAX,CAA0B;AACxBC,cAAAA,QAAQ,EAAE;AADc,aAA1B;AAGD;AACF,SAVH;AAWE,QAAA,KAAK,EAAE,KAAKC,QAAL,EAXT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAYGN,IAAI,CAACO,WAAL,EAZH,CADF;AAgBD;;;;EAhDexB,S;;AAmDlB,SAASyB,oBAAT,CAA8BC,QAA9B,EAAwC;AACtC,SAAOvB,kBAAkB,CAAC;AACxBC,IAAAA,SAAS,EAATA,SADwB;AAExBC,IAAAA,SAAS,EAATA;AAFwB,GAAD,EAGtBqB,QAHsB,CAAzB;AAID;;AAED,IAAMC,QAAQ,GAAGzB,cAAc,CAC7B,UAAA0B,KAAK;AAAA,SAAIA,KAAK,CAAC,OAAD,CAAT;AAAA,CADwB,EAE7B,UAAAA,KAAK;AAAA,SAAIA,KAAK,CAAC,cAAD,CAAT;AAAA,CAFwB,EAG7B,UACEpB,KADF,EAEEE,YAFF,EAGG;AACD,SAAQ;AACNF,IAAAA,KAAK,EAALA,KADM;AAENE,IAAAA,YAAY,EAAZA;AAFM,GAAR;AAID,CAX4B,CAA/B;AAcA,eAAeT,OAAO,CAAC0B,QAAD,EAAWF,oBAAX,CAAP,CAAwCnB,GAAxC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { bindActionCreators } from 'redux';\nimport {\n  openPanel,\n  selectTab\n} from '../actions/index.js';\n\nclass Tab extends Component {\n  tabStyle() {\n    const { panel, id, selected_tab } = this.props;\n\n    if (id === selected_tab) {\n      return {\n        backgroundColor: \"white\",\n        color: \"black\",\n        transitionDuration: \"0.5s\"\n      }\n    }\n    else {\n      if (panel.isOpen) {\n        if (panel.flavor !== id) {\n          return {\n            opacity: 0.3,\n            transitionDuration: \"0.5s\"\n          }\n        }\n        else {\n          return {\n            backgroundColor: \"white\",\n            color: \"black\",\n            transitionDuration: \"0.5s\"\n          }\n        }\n      }\n    }\n  }\n\n  render() {\n    const { text, panel, id } = this.props;\n    return (\n      <li\n        onClick={() => {\n          if (panel.isOpen) {\n            this.props.openPanel(false, \"\");\n            this.props.selectTab(id);\n            const section_id = document.getElementById(id);\n            section_id.scrollIntoView({\n              behavior: 'smooth'\n            });\n          }\n        }}\n        style={this.tabStyle()}>\n        {text.toUpperCase()}\n      </li>\n    );\n  }\n}\n\nfunction matchDispatchToProps(dispatch) {\n  return bindActionCreators({\n    openPanel,\n    selectTab\n  }, dispatch)\n}\n\nconst selector = createSelector(\n  state => state['panel'],\n  state => state['selected_tab'],\n  (\n    panel,\n    selected_tab\n) => {\n    return  {\n      panel,\n      selected_tab\n    };\n  }\n);\n\nexport default connect(selector, matchDispatchToProps)(Tab);\n"]},"metadata":{},"sourceType":"module"}