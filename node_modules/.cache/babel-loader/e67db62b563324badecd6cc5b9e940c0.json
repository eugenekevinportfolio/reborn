{"ast":null,"code":"import _classCallCheck from \"/Users/Kevin/Code/reborn/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Kevin/Code/reborn/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Kevin/Code/reborn/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Kevin/Code/reborn/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Kevin/Code/reborn/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Kevin/Code/reborn/src/components/Concept.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport out from \"../img/Out.svg\";\nimport read from \"../img/Read.svg\";\nimport map from \"lodash/map\";\nimport { connect } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { bindActionCreators } from \"redux\";\nimport { selectConcept, previewConcept, activateGlobalDarkMode } from \"../actions/index.js\";\nimport \"../styles/Concept.css\";\nimport ExternalLink from \"./ExternalLink\";\nimport { Link } from \"react-router-dom\";\n\nvar Concept =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Concept, _Component);\n\n  function Concept(props) {\n    var _this;\n\n    _classCallCheck(this, Concept);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Concept).call(this, props));\n    _this.state = {\n      activatePreview: false\n    };\n    return _this;\n  }\n\n  _createClass(Concept, [{\n    key: \"renderExternalLinks\",\n    value: function renderExternalLinks() {\n      var activatePreview = this.state.activatePreview;\n      var external_links = this.props.external_links;\n      return map(external_links, function (link, index) {\n        return React.createElement(ExternalLink, Object.assign({\n          key: index,\n          index: index\n        }, link, {\n          activatePreview: activatePreview,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var activatePreview = this.state.activatePreview;\n      var _this$props = this.props,\n          title = _this$props.title,\n          description = _this$props.description,\n          medium = _this$props.medium,\n          id = _this$props.id,\n          local = _this$props.local,\n          history = _this$props.history,\n          img_article = _this$props.img_article,\n          globalDarkMode = _this$props.globalDarkMode;\n      var readIcon = local ? read : out;\n      return React.createElement(\"div\", {\n        className: \"concept-container\",\n        id: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"concept-preview-container \" + (activatePreview ? \"concept-preview-container--visible\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"concept-preview-gradient \" + (globalDarkMode ? \"concept-preview-gradient--dark\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          backgroundImage: \"url(\" + img_article + \")\"\n        },\n        className: \"concept-preview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"concept-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"concept-content-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"concept-title \" + (globalDarkMode ? \"concept-title--dark\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, title), React.createElement(\"p\", {\n        className: \"concept-type \" + (globalDarkMode ? \"concept-type--dark\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Case Study\"), React.createElement(\"div\", {\n        className: \"concept-links-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, this.renderExternalLinks())), React.createElement(\"div\", {\n        className: \"concept-content-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"concept-description \" + (globalDarkMode ? \"concept-description--dark\" : \"\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, description), local ? React.createElement(Link, {\n        href: \"/articles/\".concat(id),\n        className: \"read-btn\",\n        onMouseEnter: function onMouseEnter() {\n          _this2.props.previewConcept(true);\n\n          _this2.setState({\n            activatePreview: true\n          });\n        },\n        onMouseLeave: function onMouseLeave() {\n          _this2.props.previewConcept(false);\n\n          _this2.setState({\n            activatePreview: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        id: local ? \"read-local-icon\" : \"\",\n        className: \"read-icon\",\n        src: readIcon,\n        alt: \"out\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })) : React.createElement(Link, {\n        to: \"/articles/\".concat(id),\n        className: \"read-btn\",\n        onMouseEnter: function onMouseEnter() {\n          _this2.props.previewConcept(true);\n\n          _this2.setState({\n            activatePreview: true\n          });\n        },\n        onMouseLeave: function onMouseLeave() {\n          _this2.props.previewConcept(false);\n\n          _this2.setState({\n            activatePreview: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        id: local ? \"read-local-icon\" : \"\",\n        className: \"read-icon\",\n        src: readIcon,\n        alt: \"out\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Concept;\n}(Component);\n\nfunction matchDispatchToProps(dispatch) {\n  return bindActionCreators({\n    selectConcept: selectConcept,\n    previewConcept: previewConcept,\n    activateGlobalDarkMode: activateGlobalDarkMode\n  }, dispatch);\n}\n\nvar selector = createSelector(function (state) {\n  return state[\"selected_concept\"];\n}, function (state) {\n  return state[\"globalDarkMode\"];\n}, function (selected_concept, globalDarkMode) {\n  return {\n    selected_concept: selected_concept,\n    globalDarkMode: globalDarkMode\n  };\n});\nexport default withRouter(connect(selector, matchDispatchToProps)(Concept));","map":{"version":3,"sources":["/Users/Kevin/Code/reborn/src/components/Concept.js"],"names":["React","Component","withRouter","map","connect","createSelector","bindActionCreators","selectConcept","previewConcept","activateGlobalDarkMode","ExternalLink","Link","Concept","props","state","activatePreview","external_links","link","index","title","description","medium","id","local","history","img_article","globalDarkMode","readIcon","read","out","backgroundImage","renderExternalLinks","setState","matchDispatchToProps","dispatch","selector","selected_concept"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport out from \"../img/Out.svg\";\nimport read from \"../img/Read.svg\";\nimport map from \"lodash/map\";\nimport { connect } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { bindActionCreators } from \"redux\";\nimport {\n  selectConcept,\n  previewConcept,\n  activateGlobalDarkMode\n} from \"../actions/index.js\";\nimport \"../styles/Concept.css\";\nimport ExternalLink from \"./ExternalLink\";\nimport { Link } from \"react-router-dom\";\n\nclass Concept extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activatePreview: false\n    };\n  }\n  renderExternalLinks() {\n    const { activatePreview } = this.state;\n    const { external_links } = this.props;\n\n    return map(external_links, (link, index) => (\n      <ExternalLink\n        key={index}\n        index={index}\n        {...link}\n        activatePreview={activatePreview}\n      />\n    ));\n  }\n\n  render() {\n    const { activatePreview } = this.state;\n    const {\n      title,\n      description,\n      medium,\n      id,\n      local,\n      history,\n      img_article,\n      globalDarkMode\n    } = this.props;\n    const readIcon = local ? read : out;\n\n    return (\n      <div className=\"concept-container\" id={id}>\n        <div\n          className={\n            \"concept-preview-container \" +\n            (activatePreview ? \"concept-preview-container--visible\" : \"\")\n          }\n        >\n          <div\n            className={\n              \"concept-preview-gradient \" +\n              (globalDarkMode ? \"concept-preview-gradient--dark\" : \"\")\n            }\n          />\n          <div\n            style={{ backgroundImage: \"url(\" + img_article + \")\" }}\n            className=\"concept-preview\"\n          />\n        </div>\n        <div className=\"concept-content\">\n          <div className=\"concept-content-left\">\n            <h2\n              className={\n                \"concept-title \" + (globalDarkMode ? \"concept-title--dark\" : \"\")\n              }\n            >\n              {title}\n            </h2>\n            <p\n              className={\n                \"concept-type \" + (globalDarkMode ? \"concept-type--dark\" : \"\")\n              }\n            >\n              Case Study\n            </p>\n            <div className=\"concept-links-container\">\n              {this.renderExternalLinks()}\n            </div>\n          </div>\n          <div className=\"concept-content-right\">\n            <p\n              className={\n                \"concept-description \" +\n                (globalDarkMode ? \"concept-description--dark\" : \"\")\n              }\n            >\n              {description}\n            </p>\n            {local ? (\n              <Link\n                href={`/articles/${id}`}\n                className=\"read-btn\"\n                onMouseEnter={() => {\n                  this.props.previewConcept(true);\n                  this.setState({ activatePreview: true });\n                }}\n                onMouseLeave={() => {\n                  this.props.previewConcept(false);\n                  this.setState({ activatePreview: false });\n                }}\n              >\n                <img\n                  id={local ? \"read-local-icon\" : \"\"}\n                  className=\"read-icon\"\n                  src={readIcon}\n                  alt=\"out\"\n                />\n              </Link>\n            ) : (\n              <Link\n                to={`/articles/${id}`}\n                className=\"read-btn\"\n                onMouseEnter={() => {\n                  this.props.previewConcept(true);\n                  this.setState({ activatePreview: true });\n                }}\n                onMouseLeave={() => {\n                  this.props.previewConcept(false);\n                  this.setState({ activatePreview: false });\n                }}\n              >\n                <img\n                  id={local ? \"read-local-icon\" : \"\"}\n                  className=\"read-icon\"\n                  src={readIcon}\n                  alt=\"out\"\n                />\n              </Link>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction matchDispatchToProps(dispatch) {\n  return bindActionCreators(\n    {\n      selectConcept,\n      previewConcept,\n      activateGlobalDarkMode\n    },\n    dispatch\n  );\n}\n\nconst selector = createSelector(\n  state => state[\"selected_concept\"],\n  state => state[\"globalDarkMode\"],\n  (selected_concept, globalDarkMode) => {\n    return {\n      selected_concept,\n      globalDarkMode\n    };\n  }\n);\n\nexport default withRouter(\n  connect(\n    selector,\n    matchDispatchToProps\n  )(Concept)\n);\n"]},"metadata":{},"sourceType":"module"}