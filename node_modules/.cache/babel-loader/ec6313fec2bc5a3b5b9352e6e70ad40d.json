{"ast":null,"code":"import _classCallCheck from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Kevin/Desktop/reborn/src/components/TechPress.js\";\nimport React, { Component } from \"react\";\nimport map from \"lodash/map\";\nimport { connect } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport \"../styles/TechPress.css\";\nimport out from \"../img/Out.svg\";\n\nvar TechPress =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TechPress, _Component);\n\n  function TechPress() {\n    _classCallCheck(this, TechPress);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TechPress).apply(this, arguments));\n  }\n\n  _createClass(TechPress, [{\n    key: \"renderTechLinks\",\n    value: function renderTechLinks() {\n      var techPress = this.props.techPress;\n      return map(techPress, function (techLink, index) {\n        return React.createElement(\"a\", {\n          key: index,\n          href: techLink.link,\n          className: \"tech-link\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"tech-link-main\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, techLink.main), React.createElement(\"p\", {\n          className: \"medium-text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, techLink.website, React.createElement(\"span\", {\n          className: \"out-icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: out,\n          alt: \"out\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }))));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"techpress\",\n        className: \"section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"max-width\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"section-sub\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"They talk about my ideas\"), React.createElement(\"h3\", {\n        className: \"section-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"In the Tech Press\"), React.createElement(\"div\", {\n        className: \"tech-links-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, this.renderTechLinks())));\n    }\n  }]);\n\n  return TechPress;\n}(Component);\n\nvar selector = createSelector(function (state) {\n  return state[\"techPress\"];\n}, function (techPress) {\n  return {\n    techPress: techPress\n  };\n});\nexport default connect(selector)(TechPress);","map":{"version":3,"sources":["/Users/Kevin/Desktop/reborn/src/components/TechPress.js"],"names":["React","Component","map","connect","createSelector","TechPress","techPress","props","techLink","index","link","main","website","out","renderTechLinks","selector","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,OAAO,yBAAP;;;IAGMC,S;;;;;;;;;;;;;sCACc;AAAA,UACRC,SADQ,GACM,KAAKC,KADX,CACRD,SADQ;AAGhB,aAAOJ,GAAG,CAACI,SAAD,EAAY,UAACE,QAAD,EAAWC,KAAX,EAAqB;AACzC,eACE;AACE,UAAA,GAAG,EAAEA,KADP;AAEE,UAAA,IAAI,EAAED,QAAQ,CAACE,IAFjB;AAGE,UAAA,SAAS,EAAC,WAHZ;AAIE,UAAA,MAAM,EAAC,QAJT;AAKE,UAAA,GAAG,EAAC,qBALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAOE;AAAG,UAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA+BF,QAAQ,CAACG,IAAxC,CAPF,EAQE;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGH,QAAQ,CAACI,OADZ,EAEE;AAAM,UAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,GAAG,EAAEC,GAAV;AAAe,UAAA,GAAG,EAAC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAFF,CARF,CADF;AAiBD,OAlBS,CAAV;AAmBD;;;6BACQ;AACP,aACE;AAAK,QAAA,EAAE,EAAC,WAAR;AAAoB,QAAA,SAAS,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,EAEE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,EAGE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkC,KAAKC,eAAL,EAAlC,CAHF,CADF,CADF;AASD;;;;EAlCqBb,S;;AAqCxB,IAAMc,QAAQ,GAAGX,cAAc,CAC7B,UAAAY,KAAK;AAAA,SAAIA,KAAK,CAAC,WAAD,CAAT;AAAA,CADwB,EAE7B,UAAAV,SAAS,EAAI;AACX,SAAO;AACLA,IAAAA,SAAS,EAATA;AADK,GAAP;AAGD,CAN4B,CAA/B;AASA,eAAeH,OAAO,CAACY,QAAD,CAAP,CAAkBV,SAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport map from \"lodash/map\";\nimport { connect } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport \"../styles/TechPress.css\";\nimport out from \"../img/Out.svg\";\n\nclass TechPress extends Component {\n  renderTechLinks() {\n    const { techPress } = this.props;\n\n    return map(techPress, (techLink, index) => {\n      return (\n        <a\n          key={index}\n          href={techLink.link}\n          className=\"tech-link\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <p className=\"tech-link-main\">{techLink.main}</p>\n          <p className=\"medium-text\">\n            {techLink.website}\n            <span className=\"out-icon\">\n              <img src={out} alt=\"out\" />\n            </span>\n          </p>\n        </a>\n      );\n    });\n  }\n  render() {\n    return (\n      <div id=\"techpress\" className=\"section\">\n        <div className=\"max-width\">\n          <p className=\"section-sub\">They talk about my ideas</p>\n          <h3 className=\"section-title\">In the Tech Press</h3>\n          <div className=\"tech-links-grid\">{this.renderTechLinks()}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst selector = createSelector(\n  state => state[\"techPress\"],\n  techPress => {\n    return {\n      techPress\n    };\n  }\n);\n\nexport default connect(selector)(TechPress);\n"]},"metadata":{},"sourceType":"module"}