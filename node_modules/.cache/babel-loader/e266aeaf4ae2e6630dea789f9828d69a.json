{"ast":null,"code":"import _classCallCheck from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Kevin/Desktop/reborn/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Kevin/Desktop/reborn/src/components/Youtube.js\";\nimport React, { Component } from \"react\";\nimport ArticleVideo from \"./ArticleVideo\";\nimport home from \"../videos/HomePage.mp4\";\nimport player from \"../videos/Player.mp4\";\nimport BlockQuote from \"./BlockQuote\";\n\nvar Youtube =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Youtube, _Component);\n\n  function Youtube() {\n    _classCallCheck(this, Youtube);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Youtube).apply(this, arguments));\n  }\n\n  _createClass(Youtube, [{\n    key: \"render\",\n    value: function render() {\n      var currentVideoIndex = this.props.currentVideoIndex;\n      return React.createElement(\"div\", {\n        className: \"article-body max-width\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(ArticleVideo, {\n        index: 0,\n        currentVideoIndex: currentVideoIndex,\n        videoSrc: home,\n        videoDescription: \"The new HomePage in action, with a better emphasis on recommendations.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"article-paragraph\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"First, the HomePage. The new HomePage is all about recommendations. Recommended videos preview automatically in the background. You can start watching the video directly from there, pause the preview, or add it to the \\\"Watch Later\\\" playlist.\"), React.createElement(\"p\", {\n        className: \"article-paragraph\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"You can also create a playlist with all the recommended videos simply by clicking the red play button.\"), React.createElement(BlockQuote, {\n        quote: \"Youtube 2.0 vows to build a trust relationship with the user, so that their typical experience consists in launching their recommendations and adjusting the playlist on the go.\",\n        shadow: \"Trust\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"article-paragraph\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Next: the player. In Youtube 2.0, the player has been completely redesigned, to offer a fresh new modal look inspired by the mobile, along with new multitasking features.\"), React.createElement(ArticleVideo, {\n        index: 1,\n        currentVideoIndex: currentVideoIndex,\n        videoSrc: player,\n        videoDescription: \"The new player view.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"article-paragraph\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"In this concept, the Like and Dislike buttons sit on top of the video player.\"), React.createElement(\"p\", {\n        className: \"article-paragraph\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Their position in the current interface make them hardly reachable: you have to quit the fullscren mode in order to see them. An incoherent design choice is also that the current interface encourages you to jump to the next video directly from the player.\"), React.createElement(\"p\", {\n        className: \"article-paragraph\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"As a consequence, most of the time, I end up leaving the video without having liked (or disliked) it. It\\u2019s something that should be avoided because then the youtubers are not rewarded for their work, and also because I missed a chance as a user to tell Youtube what my preferences were, and it could potentially end up in less relevant recommendations.\"), React.createElement(\"p\", {\n        className: \"article-paragraph\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Sometimes, I also hit the Like button before even watching the video but that can prove misleading for the algorithms as well, and it\\u2019s not how the Like/Dislike buttons were supposed to work after all.\"));\n    }\n  }]);\n\n  return Youtube;\n}(Component);\n\nexport { Youtube as default };","map":{"version":3,"sources":["/Users/Kevin/Desktop/reborn/src/components/Youtube.js"],"names":["React","Component","ArticleVideo","home","player","BlockQuote","Youtube","currentVideoIndex","props"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAEqBC,O;;;;;;;;;;;;;6BACV;AAAA,UACCC,iBADD,GACuB,KAAKC,KAD5B,CACCD,iBADD;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AACE,QAAA,KAAK,EAAE,CADT;AAEE,QAAA,iBAAiB,EAAEA,iBAFrB;AAGE,QAAA,QAAQ,EAAEJ,IAHZ;AAIE,QAAA,gBAAgB,EACd,wEALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EASE;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+PATF,EAeE;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kHAfF,EAmBE,oBAAC,UAAD;AACE,QAAA,KAAK,EACH,kLAFJ;AAIE,QAAA,MAAM,EAAE,OAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBF,EAyBE;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sLAzBF,EA8BE,oBAAC,YAAD;AACE,QAAA,KAAK,EAAE,CADT;AAEE,QAAA,iBAAiB,EAAEI,iBAFrB;AAGE,QAAA,QAAQ,EAAEH,MAHZ;AAIE,QAAA,gBAAgB,EAAE,sBAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9BF,EAoCE;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yFApCF,EAwCE;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2QAxCF,EA8CE;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iXA9CF,EAsDE;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0NAtDF,CADF;AA8DD;;;;EAjEkCH,S;;SAAhBK,O","sourcesContent":["import React, { Component } from \"react\";\nimport ArticleVideo from \"./ArticleVideo\";\nimport home from \"../videos/HomePage.mp4\";\nimport player from \"../videos/Player.mp4\";\nimport BlockQuote from \"./BlockQuote\";\n\nexport default class Youtube extends Component {\n  render() {\n    const { currentVideoIndex } = this.props;\n    return (\n      <div className=\"article-body max-width\">\n        <ArticleVideo\n          index={0}\n          currentVideoIndex={currentVideoIndex}\n          videoSrc={home}\n          videoDescription={\n            \"The new HomePage in action, with a better emphasis on recommendations.\"\n          }\n        />\n        <p className=\"article-paragraph\">\n          First, the HomePage. The new HomePage is all about recommendations.\n          Recommended videos preview automatically in the background. You can\n          start watching the video directly from there, pause the preview, or\n          add it to the \"Watch Later\" playlist.\n        </p>\n        <p className=\"article-paragraph\">\n          You can also create a playlist with all the recommended videos simply\n          by clicking the red play button.\n        </p>\n        <BlockQuote\n          quote={\n            \"Youtube 2.0 vows to build a trust relationship with the user, so that their typical experience consists in launching their recommendations and adjusting the playlist on the go.\"\n          }\n          shadow={\"Trust\"}\n        />\n        <p className=\"article-paragraph\">\n          Next: the player. In Youtube 2.0, the player has been completely\n          redesigned, to offer a fresh new modal look inspired by the mobile,\n          along with new multitasking features.\n        </p>\n        <ArticleVideo\n          index={1}\n          currentVideoIndex={currentVideoIndex}\n          videoSrc={player}\n          videoDescription={\"The new player view.\"}\n        />\n        <p className=\"article-paragraph\">\n          In this concept, the Like and Dislike buttons sit on top of the video\n          player.\n        </p>\n        <p className=\"article-paragraph\">\n          Their position in the current interface make them hardly reachable:\n          you have to quit the fullscren mode in order to see them. An\n          incoherent design choice is also that the current interface encourages\n          you to jump to the next video directly from the player.\n        </p>\n        <p className=\"article-paragraph\">\n          As a consequence, most of the time, I end up leaving the video without\n          having liked (or disliked) it. Itâ€™s something that should be avoided\n          because then the youtubers are not rewarded for their work, and also\n          because I missed a chance as a user to tell Youtube what my\n          preferences were, and it could potentially end up in less relevant\n          recommendations.\n        </p>\n        <p className=\"article-paragraph\">\n          Sometimes, I also hit the Like button before even watching the video\n          but that can prove misleading for the algorithms as well, and itâ€™s not\n          how the Like/Dislike buttons were supposed to work after all.\n        </p>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}